{"version":3,"sources":["Redux/store.js","Navigation/Header/Header.js","Navigation/Footer/Footer.js","API/chat.js","Routes/StreamPage/Chat.js","Routes/StreamPage/UnmuteUser.js","Routes/StreamPage/Stream.js","Routes/Signup/SignedIn.js","Routes/Signup/Signup.js","Routes/Archives/Archives.js","Routes/Archives/WatchArchive.js","Routes/Signup/PasswordRecover.js","Routes/Archives/AddArchive.js","Routes/PasswordReset/PasswordReset.js","App.js","serviceWorker.js","index.js"],"names":["initialState","loggedIn","authToken","freeDayToken","freeDayTokenUsed","userName","currentlySubscribed","streamAddress","archivedShows","admin","selectedArchive","refetchMutedUserList","store","createStore","state","arguments","length","undefined","action","type","Object","objectSpread","refetch","window","__REDUX_DEVTOOLS_EXTENSION__","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","menuVisible","watchDropDownVisible","mobile","menuToggle","bind","assertThisInitialized","hideMenu","toggleWatchDropDown","hideWatchDropDown","checkWidth","setState","innerWidth","setTimeout","requestAnimationFrame","headerContainerStyle","getComputedStyle","document","getElementById","body","style","paddingTop","concat","parseInt","height","_this2","addEventListener","e","stopPropagation","react_default","a","createElement","id","onMouseLeave","className","onClick","src","alt","react_router_dom","to","href","target","rel","onMouseEnter","Component","Footer","react_social_icons","url","socket","openSocket","chatFuncs","postMessage","userToken","message","emit","token","handleIncomingMessage","handler","errHandler","on","error","Message","toggleMute","messageObj","fetch","method","JSON","stringify","changes","propName","value","headers","Content-Type","Authorization","then","res","status","console","log","dispatch","json","catch","err","Chat","_this3","messages","messageErr","errMessage","mutedUserNames","toConsumableArray","scrollTop","scrollHeight","alert","sendMessage","preventDefault","_this4","map","Chat_Message","key","indexOf","user","onSubmit","onChange","event","connect","MutedUser","hidden","unmuteUser","_this$props","React","UnmuteUser","fetchMutedUsers","mutedUsers","_this5","username","UnmuteUser_MutedUser","Stream","playBackError","onPlayError","getResources","archives","docs","forEach","doc","isStreamLink","URL","push","react_router","ReactPlayer_default","width","onError","playing","controls","Routes_StreamPage_Chat","Routes_StreamPage_UnmuteUser","SignedIn","identity","password","deleteToggled","promoCode","logout","deleteAccount","updateField","subscribe","deleteToggle","applyPromo","defineProperty","confirm","location","approvalLink","Fragment","placeholder","trim","marginTop","Signup","signupEmail","signupUsername","signupPassword","signupPasswordConfirm","signupFirstName","signupLastName","signupPromoCode","signinUser","signinPassword","login","signup","_this$state","paidSubscription","_this$state2","email","replace","firstName","lastName","page","Routes_Signup_SignedIn","Archive","setReduxSelectedArchive","removeArchive","archive","_id","title","description","Archives","Archives_Archive","WatchArchive","_this$props$archive","autoPlay","controlsList","PasswordRecover","requestSuccessful","recoveryEmail","requestEmailReset","AddArchive","addArchive","name","form","PasswordReset","resetSuccess","newPassword","confirmNewPassword","sendPasswordResetRequest","confirmPassword","match","params","resetPasswordAuthToken","App","es","Navigation_Header_Header","path","component","Navigation_Footer_Footer","Boolean","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c29dbf21.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst initialState = {\n    loggedIn: false,\n    authToken: '',\n    freeDayToken: '',\n    freeDayTokenUsed: true,\n    userName: '',\n    currentlySubscribed: false,\n    streamAddress: '',\n    archivedShows: [],\n    admin: false,\n    selectedArchive: {},\n    refetchMutedUserList: true\n};\n  \nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case \"LOGIN\": return {...state, loggedIn: true, authToken: action.authToken, userName: action.userName, admin: action.admin, currentlySubscribed: action.currentlySubscribed, freeDayToken: action.freeDayToken, freeDayTokenUsed: action.freeDayTokenUsed};\n        case \"LOGOUT\": return {...state, loggedIn: false, authToken: '', userName: '', admin: false};\n        case \"SETSTREAMADDRESS\": return {...state, streamAddress: action.streamAddress};\n        case \"SETARCHIVEDSHOWS\": return {...state, archivedShows: action.archivedShows};\n        case \"SELECTARCHIVE\": return {...state, selectedArchive: action.selectedArchive};\n        case \"REFETCHMUTEDUSERLIST\": return {...state, refetchMutedUserList: action.refetch};\n        case \"CLEARARCHIVES\": return {...state, archivedShows: [], selectedArchive: {}};\n        default: return state;\n    }\n}\n  \nconst store = createStore(reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()  \n);\n  \nexport default store;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuVisible: false,\n            watchDropDownVisible: false,\n            mobile: true\n        }\n\n        this.menuToggle = this.menuToggle.bind(this);\n        this.hideMenu = this.hideMenu.bind(this);\n        this.toggleWatchDropDown = this.toggleWatchDropDown.bind(this);\n        this.hideWatchDropDown = this.hideWatchDropDown.bind(this);\n        this.checkWidth = this.checkWidth.bind(this);\n    }\n\n    checkWidth(){\n        this.setState({\n            mobile: window.innerWidth < 600,\n            menuVisible: window.innerWidth >= 600\n        });\n        setTimeout(() => {\n            window.requestAnimationFrame(() => {\n                const headerContainerStyle = getComputedStyle(document.getElementById('header-container'));\n                document.body.style.paddingTop = `${parseInt(headerContainerStyle.height) + 30}px`;\n            })\n        }, 1000);\n        \n    }\n\n    componentDidMount(){\n        this.checkWidth();\n        window.addEventListener('resize', () => {\n            this.checkWidth();\n        });\n        \n    }\n\n    menuToggle(e){\n        e.stopPropagation();\n        this.setState(state => ({menuVisible: !state.menuVisible, watchDropDownVisible: false}))\n    }\n\n    hideMenu(){\n        this.setState({menuVisible: false, watchDropDownVisible: false});\n    }\n\n    toggleWatchDropDown(){\n        this.setState(state => ({\n            watchDropDownVisible: state.menuVisible? !state.watchDropDownVisible : false\n        }));\n    }\n    \n    hideWatchDropDown(){\n        this.setState({watchDropDownVisible: false});\n    }\n\n    render() {\n        return ( \n            <div id=\"header-container\" onMouseLeave={this.state.mobile? this.hideMenu : null} >\n                <div id=\"drop-down-toggle\" className={this.state.mobile? null : 'hidden'} onClick={this.menuToggle}>\n                    <div className=\"hamburger-bar\" ></div>\n                    <div className=\"hamburger-bar\" ></div>\n                    <div className=\"hamburger-bar\" ></div>\n                </div>\n                <img onClick={this.checkWidth} id=\"header-image\" src={this.state.mobile? \"/Images/HeaderMobile.jpg\" : \"/Images/LightHeader.jpg\"} alt=\"BEST CLOSER SHOW\"/>\n                <Link to=\"/ACCOUNT\" onClick={this.state.mobile? this.hideMenu : null}>\n                    <div className={this.state.menuVisible? \"header-option\" : \"header-option hidden\"} >\n                        <h1>ACCOUNT</h1>\n                    </div>\n                </Link>\n                <a href=\"https://indictmentclothing.com\" target=\"_blank\" rel=\"noopener noreferrer\" onClick={this.state.mobile? this.hideMenu : null}>\n                    <div className={this.state.menuVisible? \"header-option\" : \"header-option hidden\"} >\n                        <h1>SHOP</h1>    \n                    </div>  \n                </a>\n                \n                <div onMouseLeave={this.state.mobile? null : this.hideWatchDropDown} onMouseEnter={this.state.mobile? null : this.toggleWatchDropDown} onClick={this.toggleWatchDropDown}>\n                    <div className={this.state.menuVisible? \"header-option\" : \"header-option hidden\"}>\n                        <h1>WATCH</h1>\n                    </div>\n                    <div className={this.state.watchDropDownVisible? null : 'hidden'} onClick={this.state.mobile? this.hideMenu : null}>\n                        <Link to=\"/STREAM\">\n                            <div className=\"header-option\"  >\n                                <h1>LIVE</h1>\n                            </div>\n                        </Link>\n                        <Link to=\"/ARCHIVES\">\n                            <div className=\"header-option\" >\n                                <h1>ARCHIVES</h1>\n                            </div>\n                        </Link>\n                    </div>\n                </div>         \n            </div>\n        );\n    }\n}\n \nexport default Header;\n","import React from 'react';\nimport { SocialIcon } from 'react-social-icons';\n\nimport './Footer.css';\n\nconst Footer = () => {\n    return ( \n        <div id=\"footer-container\">\n            <div className=\"footer-section\" id='connect'>\n                <h1 className=\"footer-section-title\">Connect</h1>\n                <SocialIcon className=\"social-icon\" url=\"https://twitter.com/thebestcloser\" target=\"_blank\" rel=\"noopener noreferrer\" />\n                <SocialIcon className=\"social-icon\" url=\"https://www.youtube.com/channel/UC1F1L-SeCrINe2-PJjbdXpQ\" target=\"_blank\" rel=\"noopener noreferrer\" />\n                <SocialIcon className=\"social-icon\" url=\"https://facebook.com/thebestcloser\" target=\"_blank\" rel=\"noopener noreferrer\" />\n            </div>\n            <div className=\"footer-section\" id='contact'>\n                <h1 className=\"footer-section-title\">Contact</h1>\n                <a id=\"email\" href=\"mailto:info@bestclosershow.com\">info@bestclosershow.com</a>\n            </div>\n        </div>\n    );\n}\n \nexport default Footer;","import openSocket from 'socket.io-client'; \nconst socket = openSocket('https://api.bestclosershow.com');\n\nconst chatFuncs = {\n    \n    postMessage: (userToken, message) => {\n        socket.emit('post message', {message: message, token: userToken});\n    },\n    handleIncomingMessage: (handler, errHandler) => {\n        socket.on('new message', message => handler(message));\n        socket.on('err', error => errHandler(error));\n    }\n}\n\n\n\nexport default chatFuncs;","import React, { Component } from 'react'; \nimport { connect } from 'react-redux';\n\nimport chatFuncs from '../../API/chat';\nimport './Chat.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleMute = this.toggleMute.bind(this);\n    }\n\n    toggleMute(){\n        const { userName } = this.props.messageObj;\n        fetch(`https://api.bestclosershow.com/user/alter-permissions/${userName}`, {\n            method: 'PATCH',\n            body: JSON.stringify({\n                \"changes\": [\n                    {\"propName\": \"canChat\", \"value\": false}\n                ]\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.props.authToken\n            }\n            \n        }).then(res => {\n            if(res.status !== 200){\n                console.log(\"muting user failed\")\n            } \n            if(res.status === 200){\n                this.props.dispatch({\n                    type: \"REFETCHMUTEDUSERLIST\",\n                    refetch: true\n                })\n            }\n            return res.json();\n        })\n        .catch(err => console.error('Error: ' + err));\n    }\n\n    render() {\n        const { messageObj} = this.props;\n        return ( \n            <li className=\"message-container\">\n                <div className=\"username-label\">{messageObj.userName}</div>\n                {this.props.admin? \n                    <div className=\"mute\" onClick={this.toggleMute} >MUTE</div>\n                    :\n                    null\n                }\n                <p className='chat-message' >{messageObj.message}</p>\n            </li>\n        );\n    }\n}\n \nclass Chat extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            messages: [],\n            message: '',\n            messageErr: false,\n            errMessage: '',\n            mutedUserNames: []\n        }\n\n        chatFuncs.handleIncomingMessage(\n            message => {\n                this.setState(state => ({\n                    messages: [...state.messages, message]\n                }));\n                console.log('recieved message: ' + message);\n                const messages = document.getElementById(\"messages-list\");\n                messages.scrollTop = messages.scrollHeight;\n            },\n            err => {\n                console.log('error', err);\n                window.alert(`An error occured. ${err}`)\n            }\n        );\n\n        this.sendMessage = this.sendMessage.bind(this);\n    }\n\n    sendMessage(e){\n        e.preventDefault();\n        if(this.state.message === ''){\n            window.alert(\"Message cannot be blank\");\n        }else if(this.state.message.length > 500){\n            window.alert(\"Message cannot be more than 500 characters\");\n        } else {\n            console.log('sent message: ' + this.state.message);\n            chatFuncs.postMessage(this.props.authToken, this.state.message);\n            this.setState({message: ''});\n        }\n    }\n\n    \n    \n    render() { \n        let messages;\n        if(this.state.messages.length !== 0){\n            messages = this.state.messages.map(messageObj => \n                <Message key={messageObj.userName + '_' + this.state.messages.indexOf(messageObj)} messageObj={messageObj} admin={this.props.admin} user={this.props.userName} authToken={this.props.authToken} dispatch={this.props.dispatch} />   \n            )\n        } else {\n            messages = <div id=\"empty-chat-message\">No messages yet</div>\n        }\n        return ( \n            <div id=\"chat-holder\" >\n                <ul id=\"messages-list\">{messages}</ul>\n                <form id=\"message-form\" onSubmit={this.sendMessage}>\n                    <input id=\"message-input\" type='text' value={this.state.message} onChange={event => this.setState({message: event.target.value})} />\n                </form>\n                <button id=\"message-submit\" onClick={this.sendMessage} alt=\"submit\">\n                    <img id=\"message-submit-image\" src=\"/Images/sendMessage.png\" alt=\"SEND\"/>\n                </button>\n            </div>            \n        );\n    }\n}\n \n\nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    authToken: state.authToken,\n    userName: state.userName,\n    streamAddress: state.streamAddress,\n    admin: state.admin\n});\n  \nexport default connect(mapStateToProps)(Chat);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './UnmuteUser.css';\n\nclass MutedUser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hidden: false\n        }\n\n        this.unmuteUser = this.unmuteUser.bind(this);\n    }\n\n    unmuteUser(){\n        const { userName, authToken } = this.props;\n        fetch(`https://api.bestclosershow.com/user/alter-permissions/${userName}`, {\n            method: 'PATCH',\n            body: JSON.stringify({\n                \"changes\": [\n                    {\"propName\": \"canChat\", \"value\": true}\n                ]\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': authToken\n            }\n            \n        }).then(res => {\n            if(res.status !== 200){\n                console.log(\"unmuting user failed\")\n            } else {\n                this.setState({hidden: true});\n                this.props.dispatch({\n                    type: \"REFETCHMUTEDUSERLIST\",\n                    refetch: true\n                })\n            }\n        })\n        .catch(err => console.error('Error: ' + err));\n    }\n\n    render() {\n        return(\n            <button className={this.state.hidden? \"muted-user-button\" : \"muted-user-button\"} onClick={this.unmuteUser} >{this.props.userName}</button>        \n        )\n    }\n}\n\n\nclass UnmuteUser extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            mutedUserNames: []\n        }\n\n        this.fetchMutedUsers = this.fetchMutedUsers.bind(this);\n    }\n\n    fetchMutedUsers(){\n        if(this.props.refetchMutedUserList){\n            fetch(`https://api.bestclosershow.com/user/muted-users`, {\n                headers: {\n                    'Authorization': this.props.authToken\n                }\n                \n            }).then(res => {\n                if(res.status !== 200){\n                    console.error(\"error retrieving muted users unmuteUser Comp\")\n                } else if(res.status === 200){\n                    this.props.dispatch({\n                        type: \"REFETCHMUTEDUSERLIST\",\n                        refetch: false\n                    })\n                }\n                return res.json();\n            })\n            .then(body => {\n                console.log(body);\n                this.setState({mutedUserNames: body});\n            })\n            .catch(err => console.error('Error: ' + err));\n        }\n    }\n\n    componentDidMount(){\n        this.fetchMutedUsers();\n    }\n\n    componentDidUpdate(){\n        this.fetchMutedUsers();\n    }\n\n    render() { \n        let mutedUsers;\n        if(this.state.mutedUserNames.length === 0){\n            mutedUsers = <div>NO USERS MUTED</div>\n        } else {\n            mutedUsers = this.state.mutedUserNames.map(username => <MutedUser userName={username} key={username} authToken={this.props.authToken } dispatch={this.props.dispatch} />)\n        }\n        return ( \n            <div id=\"unmute-users-container\">\n                <h1>Muted Users</h1>\n                <p>To unmute a user click their button. Their username should disapper.</p>\n                <ul id=\"muted-users-list-container\">{mutedUsers}</ul>\n            </div>\n        );\n    }\n}\n \nconst mapStateToProps = state => ({\n    authToken: state.authToken,\n    admin: state.admin,\n    refetchMutedUserList: state.refetchMutedUserList\n});\n  \nexport default connect(mapStateToProps)(UnmuteUser);\n","import React, { Component } from 'react';\nimport ReactPlayer from 'react-player'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Chat from './Chat';\nimport UnmuteUser from './UnmuteUser';\nimport './Stream.css';\n\n\nclass Stream extends Component {\n  constructor(){\n    super();\n    this.state = {\n      playBackError: false\n    }\n    this.onPlayError = this.onPlayError.bind(this);\n    this.getResources = this.getResources.bind(this);\n  }\n\n  getResources(){\n    fetch('https://api.bestclosershow.com/resources', {\n        \n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': this.props.authToken\n        }\n          \n      }).then(res => {\n        if(res.status !== 200){\n          console.log(\"getResources fetch failed\")\n        }\n        return res.json();\n      })\n      .then(body => {\n        let archives = [];\n        body.docs.forEach(doc => {\n          if(doc.isStreamLink){\n              this.props.dispatch({\n                type: 'SETSTREAMADDRESS',\n                streamAddress: doc.URL\n              });\n          } else {\n            archives.push(doc);\n          }\n        });\n        this.props.dispatch({\n          type: 'SETARCHIVEDSHOWS',\n          archivedShows: archives\n        });\n      })\n      .catch(err => console.error('Error: ' + err));\n  }\n\n  componentDidMount(){\n    if(!this.props.streamAddress){\n      this.getResources();\n      console.log(\"getResources() ran\");\n    }\n  }\n\n  onPlayError(){\n    console.log(\"onPlayError fired\");\n    this.setState({playBackError: true});\n  }\n\n  render () {\n    return (\n      <div id=\"stream-chat-container\">\n        {this.props.loggedIn? null : <Redirect to='/ACCOUNT' />}\n        {this.props.currentlySubscribed? \n          null \n          : \n          this.props.freeDayToken.length > 5? \n            null\n            :\n            <Redirect to='/ACCOUNT' />\n        }\n        <div id=\"stream-container\">\n          <h1 id=\"stream-label\">Best Closer Show LIVE</h1>\n          {this.state.playBackError? \n            <div id=\"playback-error-container\">\n              <h1 id=\"playback-error-comment\">Awaiting Live Show</h1>\n              <button onClick={() => this.setState({playBackError: false})} id=\"refresh-stream-button\">Refresh Stream</button>\n            </div>\n            :\n            <ReactPlayer width=\"100%\" height=\"auto\" url={this.props.streamAddress} onError={this.onPlayError} playing controls />\n          }\n        </div>\n        <div id=\"chat-container\">\n          <Chat />\n        </div>\n        {this.props.admin? \n          <div id=\"unmute-user-container\">\n            <UnmuteUser />\n          </div>\n          :\n          null\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  loggedIn: state.loggedIn,\n  authToken: state.authToken,\n  userName: state.userName,\n  streamAddress: state.streamAddress,\n  admin: state.admin,\n  currentlySubscribed: state.currentlySubscribed,\n  freeDayToken: state.freeDayToken,\n  freeDayTokenUsed: state.freeDayTokenUsed\n});\n\nexport default connect(mapStateToProps)(Stream);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './SignedIn.css';\n\nclass SignedIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            identity: '',\n            password: '',\n            deleteToggled: false,\n            promoCode: ''\n        }\n\n        this.logout = this.logout.bind(this);\n        this.deleteAccount = this.deleteAccount.bind(this);\n        this.updateField = this.updateField.bind(this);\n        this.subscribe = this.subscribe.bind(this);\n        this.deleteToggle = this.deleteToggle.bind(this);\n        this.applyPromo = this.applyPromo.bind(this);\n    }\n\n    updateField(e){\n        this.setState({[e.target.id]: e.target.value});\n    }\n\n    logout(){\n        this.props.dispatch({\n            type: 'LOGOUT'\n        });\n    }\n\n    deleteAccount(){\n        if(window.confirm(\"Are you sure you want to PERMANENTLY DELETE YOUR ACCOUNT?\")){\n            fetch('https://api.bestclosershow.com/user', {\n                method: 'delete',\n                \n                body: JSON.stringify({\n                    identity: this.state.identity,\n                    password: this.state.password\n                }),\n                \n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': this.props.authToken\n                }\n                \n            }).then(res => {\n                if(res.status !== 200){\n                    window.alert(\"Something went wrong! Try again.\");\n                } \n                return res.json();\n            })\n            .then(body => {\n                console.log(body);\n                this.logout();\n            })\n            .catch(err => console.error('Error: ' + err));\n        }\n        \n    }\n\n    subscribe(){\n        fetch('https://api.bestclosershow.com/paypal/subscribe', {\n            method: 'post',\n            \n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.props.authToken\n            }\n            \n        }).then(res => {\n            if(res.status !== 200){\n                window.alert(\"Error subscribing. Please try again!\");\n            } \n            return res.json();\n        })\n        .then(body => {\n            window.location.href = body.approvalLink;\n        })\n        .catch(err => console.error('Error: ' + err));\n    }\n\n    deleteToggle(e){\n        e.preventDefault();\n        this.setState(state => ({deleteToggled: !state.deleteToggled}));\n    }\n\n    applyPromo(){\n        fetch('https://api.bestclosershow.com/user/apply-promo', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.props.authToken\n            },\n            body: JSON.stringify({\n                promoCode: this.state.promoCode\n            })\n        }).then(res => {\n            if(res.status !== 200){\n                if(res.status === 500){\n                    window.alert('Internal Server Error')\n                } else {\n                    window.alert(\"Invalid Promo Code\");\n                }\n            } else if(res.status === 200){\n                window.alert(\"You have full access for 24 hours. Please logout and log back in to gain access.\")\n            }\n        })\n        .catch(err => console.error('Error: ' + err));\n    }\n\n    render() {\n        const { props } = this;\n\n        return ( \n            <div id=\"signed-in-container\">\n                <h1>Hello {props.userName}!</h1>\n                <h2>Manage your account from this page.</h2>\n                <button onClick={this.logout} className=\"signed-in-button logout\" >Logout</button>\n                {this.props.currentlySubscribed? null : <button onClick={this.subscribe} className=\"signed-in-button\" >Subscribe</button>}\n                {this.props.freeDayToken.length > 5? \n                    null\n                    :\n                    <React.Fragment>\n                        <input onChange={this.updateField} id=\"promoCode\" className=\"promo-input\" type=\"text\" placeholder=\"Promo Code\" value={this.state.promoCode.trim()} />\n                        <button onClick={this.applyPromo} className=\"signed-in-button\" >Apply Promo</button>\n                    </React.Fragment>\n                }\n                {this.state.deleteToggled?\n                    <React.Fragment>\n                        <input className=\"delete-confirmation-input\" id=\"identity\" type=\"text\" placeholder=\"Username or Email\" value={this.state.identity} onChange={this.updateField} />\n                        <input className=\"delete-confirmation-input\" id=\"password\" type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.updateField} />\n                        <button onClick={this.deleteAccount} className=\"signed-in-button delete-account\" >Delete Account</button>\n                        <div id=\"delete-toggle\" style={{marginTop: '30px'}} onClick={this.deleteToggle} >Click here to hide delete field.</div>\n                    </React.Fragment>\n                    :\n                    <div id=\"delete-toggle\" onClick={this.deleteToggle} >Want to delete your account? Click here.</div>\n                }\n                \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    authToken: state.authToken,\n    userName: state.userName,\n    currentlySubscribed: state.currentlySubscribed,\n    freeDayToken: state.freeDayToken,\n    freeDayTokenUsed: state.freeDayTokenUsed\n});\n \nexport default connect(mapStateToProps)(SignedIn);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\nimport './Signup.css';\nimport SignedIn from './SignedIn';\n\nclass Signup extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            signupEmail: '',\n            signupUsername: '',\n            signupPassword: '',\n            signupPasswordConfirm: '',\n            signupFirstName: '',\n            signupLastName: '',\n            signupPromoCode: '',\n            signinUser: '',\n            signinPassword: '',\n        }\n\n        console.log({\n            loggedIn: props.loggedIn,\n            authToken: props.authToken\n        });\n\n        this.updateField = this.updateField.bind(this);\n        this.login = this.login.bind(this);\n        this.signup = this.signup.bind(this);\n    }\n\n    updateField(e){\n        this.setState({[e.target.id]: e.target.value});\n    }\n\n    login(e){\n        if(e){\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        const {signinUser, signinPassword} = this.state;\n        if(signinPassword === '' || signinUser === ''){\n            window.alert(\"Password or Email is blank!\");\n        } else {\n            fetch('https://api.bestclosershow.com/user/login', {\n                method: 'post',\n                \n                body: JSON.stringify({\n                    identity: signinUser,\n                    password: signinPassword\n                }),\n              \n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              \n            }).then(res => {\n                if(res.status !== 200){\n                    window.alert(\"Invalid Credentials\");\n                } \n                return res.json();\n            })\n            .then(body => {\n                console.log(body);\n                if(body.message === \"Auth successful\") {\n                    this.props.dispatch({\n                        type: 'LOGIN',\n                        authToken: body.token,\n                        userName: signinUser,\n                        admin: body.admin,\n                        currentlySubscribed: body.paidSubscription,\n                        freeDayToken: body.freeDayToken,\n                        freeDayTokenUsed: body.freeDayTokenUsed\n                    });\n                    if(!body.paidSubscription && typeof(body.freeDayToken) !== \"string\"){\n                        window.alert(\"According to our records your subscription is not paid. If you have just subscribed and are still getting this message check your email because paypal may require you to confirm the transaction.\");\n                    }\n                }\n            })\n            .catch(err => console.error('Error: ' + err));\n        }\n    }\n\n    signup(e){\n        e.preventDefault();\n        const {signupEmail, signupUsername, signupPassword, signupPasswordConfirm, signupFirstName, signupLastName, signupPromoCode } = this.state;\n        if(signupEmail === '' || signupUsername === '' || signupPassword === '' || signupPasswordConfirm === ''){\n            window.alert(\"All fields must be filled\");\n        } else if(signupPassword !== signupPasswordConfirm){\n            window.alert(\"Passwords do not match!\")\n        } else {\n            fetch('https://api.bestclosershow.com/user/signup', {\n                method: 'post',\n                \n                body: JSON.stringify({\n                    email: signupEmail.replace(/\\s/g,''),\n                    userName: signupUsername.replace(/\\s/g,''),\n                    password: signupPassword,\n                    firstName: signupFirstName,\n                    lastName: signupLastName,\n                    promoCode: signupPromoCode\n                }),\n              \n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              \n            }).then(res => {\n                if(res.status !== 200){\n                    window.alert(\"Username or email already in use\");\n                } \n                return res.json();\n            })\n            .then(body => {\n                console.log(body);\n                this.setState({\n                    signinUser: signupEmail,\n                    signinPassword: signupPassword\n                });\n                this.login();\n            })\n            .catch(err => console.error('Error: ' + err));\n        }\n    }\n\n\n    render() { \n        let page;\n        if(this.props.loggedIn === true){\n            page = <SignedIn userName={this.props.userName} />\n        } else {\n            page = \n            <div id=\"forms-container\">\n                <div>\n                    <form className=\"form\" onSubmit={this.login}>\n                        <h1 className=\"form-label\" >LOG IN</h1>\n                        <input onChange={this.updateField} id=\"signinUser\" className=\"signup-input\" type=\"text\" placeholder=\"Username or Email\" value={this.state.signinUser} />\n                        <input onChange={this.updateField} id=\"signinPassword\" className=\"signup-input\" type=\"password\" placeholder=\"Password\" value={this.state.signinPassword} />\n                        <input className=\"submit-button\" type=\"submit\" value=\"LOG IN\" />\n                    </form>\n                    <Link to=\"/PASSWORD-RECOVERY\" id=\"password-recovery\">\n                        Forgot your password? Click Here.\n                    </Link>\n                </div>\n                <form className=\"form\" onSubmit={this.signup}>\n                    <h1 className=\"form-label\" >SIGN UP</h1>\n                    <input onChange={this.updateField} id=\"signupFirstName\" className=\"signup-input\" type=\"text\" placeholder=\"First Name\" value={this.state.signupFirstName} />\n                    <input onChange={this.updateField} id=\"signupLastName\" className=\"signup-input\" type=\"text\" placeholder=\"Last Name\" value={this.state.signupLastName} />\n                    <input onChange={this.updateField} id=\"signupUsername\" className=\"signup-input\" type=\"text\" placeholder=\"Username\" value={this.state.signupUsername.replace(/\\s/g,'')} />\n                    <input onChange={this.updateField} id=\"signupEmail\" className=\"signup-input\" type=\"text\" placeholder=\"Email\" value={this.state.signupEmail.replace(/\\s/g,'')} />\n                    <input onChange={this.updateField} id=\"signupPassword\" className=\"signup-input\" type=\"password\" placeholder=\"Password\" value={this.state.signupPassword} />\n                    <input onChange={this.updateField} id=\"signupPasswordConfirm\" className=\"signup-input\" type=\"password\" placeholder=\"Confirm Password\" value={this.state.signupPasswordConfirm} />\n                    <input onChange={this.updateField} id=\"signupPromoCode\" className=\"signup-input\" type=\"text\" placeholder=\"Promo Code\" value={this.state.signupPromoCode.trim()} />\n                    <input className=\"submit-button\" type=\"submit\" value=\"SIGN UP\" />\n                </form>\n            </div>\n        }\n        return ( \n            <React.Fragment>\n                {page}\n            </React.Fragment>\n        );\n    }\n}\n \nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    authToken: state.authToken,\n    userName: state.userName\n});\n \nexport default connect(mapStateToProps)(Signup);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport './Archives.css';\n\nclass Archive extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.setReduxSelectedArchive = this.setReduxSelectedArchive.bind(this);\n        this.removeArchive = this.removeArchive.bind(this);\n    }\n\n    setReduxSelectedArchive(){\n        this.props.dispatch({\n            type: \"SELECTARCHIVE\",\n            selectedArchive: this.props.archive\n        });\n    }\n\n    removeArchive(e){\n        e.preventDefault();\n        const { archive, authToken } = this.props;\n        fetch(`https://api.bestclosershow.com/resources/${archive._id}`, {\n            method: 'delete',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': authToken\n            }\n        }).then(res => {\n            if(res.status !== 200){\n                window.alert(\"Resource not deleted\");\n            } else if (res.status === 200) {\n                window.alert(\"Resource deleted\");\n                this.props.dispatch({\n                    type: \"CLEARARCHIVES\"\n                });\n            }\n        })\n        .catch(err => console.error('Error: ' + err));\n    }\n\n\n    render() {\n\n        return ( \n            <Link to=\"/WATCH-ARCHIVE\" onClick={this.setReduxSelectedArchive} >\n                <div className=\"archive-container\">\n                    <h1 className=\"archive-title\">{this.props.title}</h1>\n                    {this.props.admin? <h1 className=\"delete-archive-button\" onClick={this.removeArchive} >DELETE</h1> : null }\n                    <p className=\"archive-description\">{this.props.description}</p>\n                </div>\n            </Link>\n        );\n    }\n}\n \nclass Archives extends Component {\n    constructor(props){\n        super(props);\n\n        this.getResources = this.getResources.bind(this);\n    }\n\n    getResources(){\n        fetch('https://api.bestclosershow.com/resources', {\n            \n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.props.authToken\n            }\n            \n        }).then(res => {\n            if(res.status !== 200){\n                console.log(\"getResources fetch failed\")\n            } \n            return res.json();\n        })\n        .then(body => {\n            let archives = [];\n            body.docs.forEach(doc => {\n                if(doc.isStreamLink){\n                    this.props.dispatch({\n                        type: 'SETSTREAMADDRESS',\n                        streamAddress: doc.URL\n                    });\n                } else {\n                    archives.push(doc);\n                }\n            });\n            this.props.dispatch({\n                type: 'SETARCHIVEDSHOWS',\n                archivedShows: archives\n            });\n        })\n        .catch(err => console.error('Error: ' + err));\n    }\n\n    componentDidMount(){\n        this.getResources();\n    }\n\n    render() { \n        const archives = this.props.archivedShows.map(archive => <Archive archive={archive} dispatch={this.props.dispatch} title={archive.title} description={archive.description} key={archive.title} authToken={this.props.authToken} admin={this.props.admin} /> );\n        return ( \n            <div id=\"archives-container\">\n                {this.props.admin? <Link to=\"/ADD-ARCHIVE\"><h1 id=\"add-archive-link\">ADD ARCHIVE</h1></Link> : null}\n                {this.props.loggedIn? null : <Redirect to=\"/ACCOUNT\" />}\n                {this.props.currentlySubscribed? \n                    null \n                    : \n                    this.props.freeDayTokenUsed === false? \n                        null\n                        :\n                        <Redirect to='/ACCOUNT' />\n                }\n                <h1 onClick={this.getResources} className={archives.length < 1? \"link\" : null}>ARCHIVED SHOWS</h1>\n                <div>\n                    {archives}\n                </div>\n            </div>\n        );\n    }\n}\n \nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    authToken: state.authToken,\n    userName: state.userName,\n    admin: state.admin,\n    archivedShows: state.archivedShows,\n    currentlySubscribed: state.currentlySubscribed,\n    freeDayToken: state.freeDayToken,\n    freeDayTokenUsed: state.freeDayTokenUsed\n});\n \nexport default connect(mapStateToProps)(Archives);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport './WatchArchive.css';\n\nimport Chat from '../StreamPage/Chat';\n\nclass WatchArchive extends Component {\n    render() { \n        const { title, URL, description, isStreamLink } = this.props.archive;\n        return ( \n            <div id=\"watch-archive-container\">\n                {this.props.loggedIn? null: <Redirect to=\"/ACCOUNT\" />}\n                {this.props.currentlySubscribed? \n                    null \n                    : \n                    this.props.freeDayTokenUsed?\n                    <Redirect to='/ACCOUNT' />\n                    :\n                    null\n                }\n                {isStreamLink? <Redirect to=\"/STREAM\" /> : null}\n                <div id=\"watch-archive-video-container\">\n                    <video id=\"archive-video\" src={URL} type=\"video/mp4\" autoPlay controls controlsList=\"nodownload\" >Update to a modern browser to view video.</video>\n                    <h1>{title}</h1>\n                    <p id=\"watch-archive-description\">{description}</p>\n                </div>\n                <div id=\"archives-chat-wrapper\">\n                    <Chat />\n                </div>\n            </div>\n        );\n    }\n}\n \nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    authToken: state.authToken,\n    userName: state.userName,\n    admin: state.admin,\n    archive: state.selectedArchive,\n    currentlySubscribed: state.currentlySubscribed,\n    freeDayTokenUsed: state.freeDayTokenUsed\n});\n \nexport default connect(mapStateToProps)(WatchArchive);\n","import React, { Component } from 'react';\n\nimport './PasswordRecover.css';\n\nclass PasswordRecover extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            requestSuccessful: false,\n            recoveryEmail: ''\n        }\n\n        this.updateField = this.updateField.bind(this);\n        this.requestEmailReset = this.requestEmailReset.bind(this);\n\n    }\n\n    updateField(e){\n        this.setState({[e.target.id]: e.target.value});\n    }\n\n    requestEmailReset(e){\n        e.stopPropagation();\n        e.preventDefault();\n        fetch(`https://api.bestclosershow.com/password-reset-request/${this.state.recoveryEmail}`)\n        .then(res => {\n            if(res.status !== 200){\n                window.alert(\"Email not found\");\n            } else if(res.status === 200){\n                this.setState({requestSuccessful: true});\n            }\n        })\n        .catch(err => {\n            window.alert(\"An error occured!\" + err);\n        });\n    }\n\n    render() { \n        return ( \n            <div id=\"password-recover-container\">\n                <form className=\"form\" onSubmit={this.requestEmailReset}>\n                    <h1 className=\"form-label\" >GET PASSWORD RESET EMAIL</h1>\n                    <input onChange={this.updateField} id=\"recoveryEmail\" className=\"signup-input\" type=\"text\" placeholder=\"Account Email\" value={this.state.recoveryEmail} />\n                    <input className=\"submit-button\" type=\"submit\" value=\"REQUEST EMAIL\" />\n                </form>\n                {this.state.requestSuccessful?\n                    <div id=\"request-success-message\">\n                        <h3>Password Recover Email Successfully Sent!</h3>\n                        <p>If you don't recieve an email within 15 minutes return to this page and try again.</p>\n                    </div>\n                    :\n                    null\n                }\n            </div>\n        );\n    }\n}\n \nexport default PasswordRecover;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './AddArchive.css';\n\nclass AddArchive extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            title: '',\n            href: '',\n            description: 'Archive Description'\n        }\n\n        this.updateField = this.updateField.bind(this);\n        this.addArchive = this.addArchive.bind(this);\n    }\n\n    updateField(e){\n        this.setState({[e.target.id]: e.target.value});\n    }\n\n    addArchive(e){\n        e.preventDefault();\n        const { authToken } = this.props;\n        const {title, href, description} = this.state;\n        fetch(`https://api.bestclosershow.com/resources/new-resource`, {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': authToken\n            },\n            body: JSON.stringify({\n                \"title\": title,\n\t            \"URL\": href,\n\t            \"description\": description\n            })\n        }).then(res => {\n            if(res.status !== 200){\n                window.alert(\"Adding Archive Failed. Try again!\");\n            } else if (res.status === 200) {\n                window.alert(\"Archive Added\");\n                this.props.dispatch({\n                    type: \"CLEARARCHIVES\"\n                });\n            }\n        })\n        .catch(err => console.error('Error: ' + err));\n    }\n\n    render() { \n        return ( \n            <div>\n                <form id=\"add-resource-form\" className=\"form\" onSubmit={this.addArchive}>\n                    <h1 className=\"form-label\" >ADD RESOURCE</h1>\n                    <input onChange={this.updateField} id=\"title\" className=\"signup-input\" type=\"text\" placeholder=\"Archive Title\" value={this.state.title} />\n                    <input onChange={this.updateField} id=\"href\" className=\"signup-input\" type=\"text\" placeholder=\"Archive Link Address\" value={this.state.href} />\n                    <textarea onChange={this.updateField} name=\"description\" id=\"description\" form=\"add-resource-form\" value={this.state.description}></textarea>                    \n                    <input className=\"submit-button\" type=\"submit\" value=\"ADD ARCHIVE\" />\n                </form>\n            </div>\n        );\n    }\n}\n \n\nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    authToken: state.authToken,\n    userName: state.userName,\n    admin: state.admin,\n});\n \nexport default connect(mapStateToProps)(AddArchive);\n","import React, { Component } from 'react';\n\nimport './PasswordReset.css';\n\nclass PasswordReset extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            resetSuccess: false,\n            newPassword: '',\n            confirmNewPassword: ''\n        }\n\n        this.sendPasswordResetRequest = this.sendPasswordResetRequest.bind(this);\n        this.updateField = this.updateField.bind(this);\n    }\n\n    updateField(e){\n        this.setState({[e.target.id]: e.target.value});\n    }\n\n    sendPasswordResetRequest(){\n        if(this.state.newPassword !== this.state.confirmNewPassword){\n            window.alert(\"Passwords do not match!\");\n        } else {\n            fetch('https://api.bestclosershow.com/password-reset-request', {\n                method: 'post',\n                \n                body: JSON.stringify({\n                    password: this.state.newPassword,\n                    confirmPassword: this.state.confirmNewPassword, \n                    token: this.props.match.params.resetPasswordAuthToken\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(res => {\n                if(res.status === 401){\n                    window.alert('Reset email has expired. Please request another reset email and try again!');\n                } else if(res.status === 500){\n                    window.alert('Internal server error. Please request another reset email and try again!');\n                } else if(res.status === 200){\n                    this.setState({resetSuccess: true});\n                }\n            })\n            .catch(err => window.alert(`Error with reset request: ${err}`));\n        }\n    }\n\n    render() { \n        return ( \n            <div id=\"password-reset-container\">\n                <h1 id=\"password-reset-label\">Reset Password for {this.props.match.params.userName}</h1>\n                <input className=\"password-reset-input\" value={this.state.newPassword} id=\"newPassword\" onChange={this.updateField} type=\"password\" placeholder=\"NEW PASSWORD\"/>\n                <input className=\"password-reset-input\" value={this.state.confirmNewPassword} id=\"confirmNewPassword\" onChange={this.updateField} type=\"password\" placeholder=\"CONFIRM NEW PASSWORD\"/>\n                <button className=\"password-reset-input\" id=\"password-reset-submit-button\" onClick={this.sendPasswordResetRequest}>Change Password</button>\n                {this.state.resetSuccess? \n                    <div id=\"password-reset-success-message\">\n                        <h3>Password Reset Successful!</h3>\n                        <p>You should now have access to your account!</p>\n                    </div>\n                    :\n                    null\n                }\n            </div>\n        );\n    }\n}\n \nexport default PasswordReset;","import React, { Component } from 'react';\nimport {BrowserRouter as Router,Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './Redux/store';\n\n\nimport Header from './Navigation/Header/Header';\nimport Footer from './Navigation/Footer/Footer';\n\nimport Stream from './Routes/StreamPage/Stream';\nimport Signup from './Routes/Signup/Signup';\nimport Archives from './Routes/Archives/Archives';\nimport WatchArchive from './Routes/Archives/WatchArchive';\nimport PasswordRecover from './Routes/Signup/PasswordRecover';\nimport AddArchive from './Routes/Archives/AddArchive';\nimport PasswordReset from './Routes/PasswordReset/PasswordReset';\n\n \nclass App extends Component {\n  render () {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Header />\n          <Route path=\"/(|ACCOUNT)/\" component={Signup} />\n          <Route path=\"/STREAM\" component={Stream} />\n          <Route path=\"/ARCHIVES\" component={Archives} />\n          <Route path=\"/WATCH-ARCHIVE\" component={WatchArchive} />\n          <Route path=\"/PASSWORD-RECOVERY\" component={PasswordRecover} />\n          <Route path=\"/ADD-ARCHIVE\" component={AddArchive} />\n          <Route path=\"/RESET-PASSWORD/:resetPasswordAuthToken/:userName\" component={PasswordReset} />\n          <Footer />\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}