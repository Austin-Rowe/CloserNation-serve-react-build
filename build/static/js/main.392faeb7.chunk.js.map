{"version":3,"sources":["Redux/store.js","Navigation/Header/Header.js","Navigation/Footer/Footer.js","API/chat.js","Routes/StreamPage/Chat.js","Routes/StreamPage/UnmuteUser.js","Routes/StreamPage/Stream.js","Loading/Loading.js","Routes/Signup/SignedIn.js","Routes/Signup/SignupRevised.js","Routes/Archives/Archives.js","Routes/Archives/WatchArchive.js","Routes/Signup/PasswordRecover.js","Routes/Archives/AddArchive.js","Routes/PasswordReset/PasswordReset.js","Routes/AdminView/Admin.js","Routes/ConfirmSubscription/Confirm.js","Routes/GiftRoutes/GiftSelect/GiftSelection.js","Routes/GiftRoutes/LinkPage/LinkPayout.js","Routes/GiftRoutes/GiftSignup/GiftSignup.js","App.js","serviceWorker.js","index.js"],"names":["initialState","loggedIn","authToken","freeDayToken","freeDayTokenUsed","userName","currentlySubscribed","streamAddress","archivedShows","admin","selectedArchive","refetchMutedUserList","store","createStore","state","arguments","length","undefined","action","type","Object","objectSpread","refetch","window","__REDUX_DEVTOOLS_EXTENSION__","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","menuVisible","watchDropDownVisible","mobile","menuToggle","bind","assertThisInitialized","hideMenu","toggleWatchDropDown","hideWatchDropDown","checkWidth","setState","innerWidth","setTimeout","requestAnimationFrame","headerContainerStyle","getComputedStyle","document","getElementById","body","style","paddingTop","concat","parseInt","height","_this2","addEventListener","e","stopPropagation","react_default","a","createElement","id","onMouseLeave","className","onClick","src","alt","react_router_dom","to","href","target","rel","onMouseEnter","Component","Footer","react_social_icons","url","socket","openSocket","chatFuncs","postMessage","userToken","message","emit","token","handleIncomingMessage","handler","errHandler","on","error","Message","checkIfUrl","regex","messageArray","split","messageArrayUrled","map","word","index","test","includes","key","messageObj","toggleMute","fetch","method","JSON","stringify","changes","propName","value","headers","Content-Type","Authorization","then","res","status","console","log","dispatch","json","catch","err","Chat","_this3","messages","messageErr","errMessage","mutedUserNames","toConsumableArray","scrollTop","scrollHeight","alert","sendMessage","preventDefault","_this4","Chat_Message","indexOf","user","onSubmit","autoComplete","onChange","event","connect","MutedUser","hidden","unmuteUser","_this$props","React","UnmuteUser","fetchMutedUsers","mutedUsers","_this5","username","UnmuteUser_MutedUser","Stream","playBackError","onPlayError","getResources","archives","docs","forEach","doc","isStreamLink","URL","push","ReactGA","initialize","pageview","react_router","ReactPlayer_default","width","onError","playing","controls","playsinline","Routes_StreamPage_Chat","Routes_StreamPage_UnmuteUser","Loading","react_loader_spinner_default","color","SignedIn","identity","password","deleteToggled","promoCode","loading","loadingMessage","logout","deleteAccount","updateField","subscribe","deleteToggle","applyPromo","defineProperty","confirm","location","approvalLink","Fragment","src_Loading_Loading","placeholder","trim","marginTop","SignupRevised","signupEmail","signupUsername","signupPassword","signupPasswordConfirm","signupFirstName","signupLastName","signupPromoCode","signinUser","signinPassword","signupSelected","login","signup","toggleSelected","_this$state","hasPaypalRecurringId","paidSubscription","_this$state2","email","replace","firstName","lastName","page","Routes_Signup_SignedIn","borderTopLeftRadius","borderBottomRightRadius","borderTopRightRadius","borderBottomLeftRadius","Archive","setReduxSelectedArchive","removeArchive","archive","_id","dateArr","date","Date","toDateString","fileNames","thumbnail","title","showNumber","description","Archives","splice","sort","b","aInt","bInt","Archives_Archive","video","WatchArchive","_this$props$archive","rawDate","autoPlay","controlsList","PasswordRecover","requestSuccessful","recoveryEmail","requestEmailReset","AddArchive","addArchive","name","form","PasswordReset","resetSuccess","newPassword","confirmNewPassword","sendPasswordResetRequest","confirmPassword","match","params","resetPasswordAuthToken","ArchiveUpload","archiveTitle","archiveDescription","archiveFile","thumbnailFile","awaitingArchiveConfirmation","archiveFileDuration","archiveDate","archiveNumber","addArchiveFile","addThumbnailFile","uploadArchive","files","dummyVideoEl","createObjectURL","setDuration","setInterval","duration","Math","floor","clearInterval","formData","FormData","append","response","htmlFor","fontWeight","GenerateGiftLink","getGiftLink","months","accessLink","defaultValue","Admin","checkUserName","Admin_ArchiveUpload","Admin_GenerateGiftLink","Confirm","confirmed","paymentConfirmationToken","GiftOption","select","containerClass","GiftSelection","margin","GiftSelection_GiftOption","LinkPayout","monthCount","paypalParams","qs","parse","search","_this$props$match$par","localGiftObj","localStorage","getItem","paymentId","payerID","PayerID","paymentID","setItem","GiftSignup","giftToken","App","es","Navigation_Header_Header","path","component","AdminView","Navigation_Footer_Footer","Boolean","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.392faeb7.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst initialState = {\n    loggedIn: false,\n    authToken: '',\n    freeDayToken: '',\n    freeDayTokenUsed: true,\n    userName: '',\n    currentlySubscribed: false,\n    streamAddress: '',\n    archivedShows: [],\n    admin: false,\n    selectedArchive: {},\n    refetchMutedUserList: true,\n};\n  \nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case \"LOGIN\": return {...state, loggedIn: true, authToken: action.authToken, userName: action.userName, admin: action.admin, currentlySubscribed: action.currentlySubscribed, freeDayToken: action.freeDayToken, freeDayTokenUsed: action.freeDayTokenUsed};\n        case \"LOGOUT\": return {...state, loggedIn: false, authToken: '', userName: '', admin: false};\n        case \"SETSTREAMADDRESS\": return {...state, streamAddress: action.streamAddress};\n        case \"SETARCHIVEDSHOWS\": return {...state, archivedShows: action.archivedShows};\n        case \"SELECTARCHIVE\": return {...state, selectedArchive: action.selectedArchive};\n        case \"REFETCHMUTEDUSERLIST\": return {...state, refetchMutedUserList: action.refetch};\n        case \"CLEARARCHIVES\": return {...state, archivedShows: [], selectedArchive: {}};\n        default: return state;\n    }\n}\n  \nconst store = createStore(reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()  \n);\n  \nexport default store;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuVisible: false,\n            watchDropDownVisible: false,\n            mobile: true\n        }\n\n        this.menuToggle = this.menuToggle.bind(this);\n        this.hideMenu = this.hideMenu.bind(this);\n        this.toggleWatchDropDown = this.toggleWatchDropDown.bind(this);\n        this.hideWatchDropDown = this.hideWatchDropDown.bind(this);\n        this.checkWidth = this.checkWidth.bind(this);\n    }\n\n    checkWidth(){\n        this.setState({\n            mobile: window.innerWidth < 600,\n            menuVisible: window.innerWidth >= 600\n        });\n        setTimeout(() => {\n            window.requestAnimationFrame(() => {\n                const headerContainerStyle = getComputedStyle(document.getElementById('header-container'));\n                document.body.style.paddingTop = `${parseInt(headerContainerStyle.height) + 30}px`;\n            })\n        }, 1000);\n        \n    }\n\n    componentDidMount(){\n        this.checkWidth();\n        window.addEventListener('resize', () => {\n            this.checkWidth();\n        });\n        \n    }\n\n    menuToggle(e){\n        e.stopPropagation();\n        this.setState(state => ({menuVisible: !state.menuVisible, watchDropDownVisible: false}))\n    }\n\n    hideMenu(){\n        this.setState({menuVisible: false, watchDropDownVisible: false});\n    }\n\n    toggleWatchDropDown(){\n        this.setState(state => ({\n            watchDropDownVisible: state.menuVisible? !state.watchDropDownVisible : false\n        }));\n    }\n    \n    hideWatchDropDown(){\n        this.setState({watchDropDownVisible: false});\n    }\n\n    render() {\n        return ( \n            <div id=\"header-container\" onMouseLeave={this.state.mobile? this.hideMenu : null} >\n                <div id=\"drop-down-toggle\" className={this.state.mobile? null : 'hidden'} onClick={this.menuToggle}>\n                    <div className=\"hamburger-bar\" ></div>\n                    <div className=\"hamburger-bar\" ></div>\n                    <div className=\"hamburger-bar\" ></div>\n                </div>\n                <img onClick={this.checkWidth} id=\"header-image\" src={this.state.mobile? \"/Images/HeaderMobile.jpg\" : \"/Images/LightHeader.jpg\"} alt=\"BEST CLOSER SHOW\"/>\n                <Link to=\"/ACCOUNT\" onClick={this.state.mobile? this.hideMenu : null}>\n                    <div className={this.state.menuVisible? \"header-option\" : \"header-option hidden\"} >\n                        <h1>ACCOUNT</h1>\n                    </div>\n                </Link>\n                <a href=\"https://indictmentclothing.com\" target=\"_blank\" rel=\"noopener noreferrer\" onClick={this.state.mobile? this.hideMenu : null}>\n                    <div className={this.state.menuVisible? \"header-option\" : \"header-option hidden\"} >\n                        <h1>SHOP</h1>    \n                    </div>  \n                </a>\n                \n                <div onMouseLeave={this.state.mobile? null : this.hideWatchDropDown} onMouseEnter={this.state.mobile? null : this.toggleWatchDropDown} onClick={this.toggleWatchDropDown}>\n                    <div className={this.state.menuVisible? \"header-option\" : \"header-option hidden\"}>\n                        <h1>WATCH</h1>\n                    </div>\n                    <div className={this.state.watchDropDownVisible? null : 'hidden'} onClick={this.state.mobile? this.hideMenu : null}>\n                        <Link to=\"/STREAM\">\n                            <div className=\"header-option\"  >\n                                <h1>LIVE</h1>\n                            </div>\n                        </Link>\n                        <Link to=\"/ARCHIVES\">\n                            <div className=\"header-option\" >\n                                <h1>ARCHIVES</h1>\n                            </div>\n                        </Link>\n                    </div>\n                </div>         \n            </div>\n        );\n    }\n}\n \nexport default Header;\n","import React from 'react';\nimport { SocialIcon } from 'react-social-icons';\n\nimport './Footer.css';\n\nconst Footer = () => {\n    return ( \n        <div id=\"footer-container\">\n            <div className=\"footer-section\" id='connect'>\n                <h1 className=\"footer-section-title\">Connect</h1>\n                <SocialIcon className=\"social-icon\" url=\"https://twitter.com/thebestcloser\" target=\"_blank\" rel=\"noopener noreferrer\" />\n                <SocialIcon className=\"social-icon\" url=\"https://www.youtube.com/channel/UC1F1L-SeCrINe2-PJjbdXpQ\" target=\"_blank\" rel=\"noopener noreferrer\" />\n                <SocialIcon className=\"social-icon\" url=\"https://facebook.com/thebestcloser\" target=\"_blank\" rel=\"noopener noreferrer\" />\n            </div>\n            <div className=\"footer-section\" id='contact'>\n                <h1 className=\"footer-section-title\">Contact</h1>\n                <a id=\"email\" href=\"mailto:closermike@yahoo.com\">CloserMike@yahoo.com</a>\n            </div>\n        </div>\n    );\n}\n \nexport default Footer;","import openSocket from 'socket.io-client'; \nconst socket = openSocket('https://api.bestclosershow.com');\n\nconst chatFuncs = {\n    \n    postMessage: (userToken, message) => {\n        socket.emit('post message', {message: message, token: userToken});\n    },\n    handleIncomingMessage: (handler, errHandler) => {\n        socket.on('new message', message => handler(message));\n        socket.on('err', error => errHandler(error));\n    }\n}\n\n\n\nexport default chatFuncs;","import React, { Component } from 'react'; \nimport { connect } from 'react-redux';\n\nimport chatFuncs from '../../API/chat';\nimport './Chat.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            messageObj: props.messageObj\n        };\n\n        this.toggleMute = this.toggleMute.bind(this);\n    }\n\n    componentWillMount(){\n        this.checkIfUrl(this.props.messageObj.message);\n    }\n\n    checkIfUrl = message => {\n        let regex = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/;\n        let messageArray = message.split(' ');\n\n        const messageArrayUrled = messageArray.map((word, index) => {\n            let processedWord;\n            \n            if(regex.test(word)){\n                processedWord = <a href={word.includes('http')? word : `//${word}`} key={word} target=\"_blank\" rel=\"noopener noreferrer\">{word}</a>;\n            } else if(regex.test(messageArray[index - 1])){\n                processedWord = ` ${word} `\n            } else if(index === messageArray.length - 1){\n                processedWord = `${word}`\n            } else {\n                processedWord = `${word} `\n            }\n\n            return processedWord;\n        });\n\n        this.setState(state => ({\n            messageObj: {...state.messageObj, message: messageArrayUrled}\n        }));\n    }\n\n    toggleMute(){\n        const { userName } = this.props.messageObj;\n        fetch(`https://api.bestclosershow.com/user/alter-permissions/${userName}`, {\n            method: 'PATCH',\n            body: JSON.stringify({\n                \"changes\": [\n                    {\"propName\": \"canChat\", \"value\": false}\n                ]\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.props.authToken\n            }\n            \n        }).then(res => {\n            if(res.status !== 200){\n                console.log(\"muting user failed\")\n            } \n            if(res.status === 200){\n                this.props.dispatch({\n                    type: \"REFETCHMUTEDUSERLIST\",\n                    refetch: true\n                })\n            }\n            return res.json();\n        })\n        .catch(err => console.error('Error: ' + err));\n    }\n\n    render() {\n        const { messageObj} = this.state;\n        return ( \n            <li className=\"message-container\">\n                <div className=\"username-label\">{messageObj.userName}</div>\n                {this.props.admin? \n                    <div className=\"mute\" onClick={this.toggleMute} >MUTE</div>\n                    :\n                    null\n                }\n                <p className='chat-message' >{messageObj.message}</p>\n            </li>\n        );\n    }\n}\n \nclass Chat extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            messages: [],\n            message: '',\n            messageErr: false,\n            errMessage: '',\n            mutedUserNames: []\n        }\n\n        chatFuncs.handleIncomingMessage(\n            message => {\n                this.setState(state => ({\n                    messages: [...state.messages, message]\n                }));\n                const messages = document.getElementById(\"messages-list\");\n                messages.scrollTop = messages.scrollHeight;\n            },\n            err => {\n                console.log('error', err);\n                window.alert(`An error occured. ${err}`)\n            }\n        );\n\n        this.sendMessage = this.sendMessage.bind(this);\n    }\n\n    sendMessage(e){\n        e.preventDefault();\n        if(this.state.message === ''){\n            window.alert(\"Message cannot be blank\");\n        }else if(this.state.message.length > 500){\n            window.alert(\"Message cannot be more than 500 characters\");\n        } else {\n            console.log('sent message: ' + this.state.message);\n            chatFuncs.postMessage(this.props.authToken, this.state.message);\n            this.setState({message: ''});\n        }\n    }\n\n    \n    \n    render() { \n        let messages;\n        if(this.state.messages.length !== 0){\n            messages = this.state.messages.map(messageObj => \n                <Message key={messageObj.userName + '_' + this.state.messages.indexOf(messageObj)} messageObj={messageObj} admin={this.props.admin} user={this.props.userName} authToken={this.props.authToken} dispatch={this.props.dispatch} />   \n            )\n        } else {\n            messages = <div id=\"empty-chat-message\">No messages yet</div>\n        }\n        return ( \n            <div id=\"chat-holder\" >\n                <ul id=\"messages-list\">{messages}</ul>\n                <form id=\"message-form\" onSubmit={this.sendMessage}>\n                    <input id=\"message-input\" type='text' autoComplete=\"off\" value={this.state.message} onChange={event => this.setState({message: event.target.value})} />\n                </form>\n                <button id=\"message-submit\" onClick={this.sendMessage} alt=\"submit\">\n                    <img id=\"message-submit-image\" src=\"/Images/sendMessage.png\" alt=\"SEND\"/>\n                </button>\n            </div>            \n        );\n    }\n}\n \n\nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    authToken: state.authToken,\n    userName: state.userName,\n    streamAddress: state.streamAddress,\n    admin: state.admin\n});\n  \nexport default connect(mapStateToProps)(Chat);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './UnmuteUser.css';\n\nclass MutedUser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hidden: false\n        }\n\n        this.unmuteUser = this.unmuteUser.bind(this);\n    }\n\n    unmuteUser(){\n        const { userName, authToken } = this.props;\n        fetch(`https://api.bestclosershow.com/user/alter-permissions/${userName}`, {\n            method: 'PATCH',\n            body: JSON.stringify({\n                \"changes\": [\n                    {\"propName\": \"canChat\", \"value\": true}\n                ]\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': authToken\n            }\n            \n        }).then(res => {\n            if(res.status !== 200){\n                console.log(\"unmuting user failed\")\n            } else {\n                this.setState({hidden: true});\n                this.props.dispatch({\n                    type: \"REFETCHMUTEDUSERLIST\",\n                    refetch: true\n                })\n            }\n        })\n        .catch(err => console.error('Error: ' + err));\n    }\n\n    render() {\n        return(\n            <button className={this.state.hidden? \"muted-user-button\" : \"muted-user-button\"} onClick={this.unmuteUser} >{this.props.userName}</button>        \n        )\n    }\n}\n\n\nclass UnmuteUser extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            mutedUserNames: []\n        }\n\n        this.fetchMutedUsers = this.fetchMutedUsers.bind(this);\n    }\n\n    fetchMutedUsers(){\n        if(this.props.refetchMutedUserList){\n            fetch(`https://api.bestclosershow.com/user/muted-users`, {\n                headers: {\n                    'Authorization': this.props.authToken\n                }\n                \n            }).then(res => {\n                if(res.status !== 200){\n                    console.error(\"error retrieving muted users unmuteUser Comp\")\n                } else if(res.status === 200){\n                    this.props.dispatch({\n                        type: \"REFETCHMUTEDUSERLIST\",\n                        refetch: false\n                    })\n                }\n                return res.json();\n            })\n            .then(body => {\n                console.log(body);\n                this.setState({mutedUserNames: body});\n            })\n            .catch(err => console.error('Error: ' + err));\n        }\n    }\n\n    componentDidMount(){\n        this.fetchMutedUsers();\n    }\n\n    componentDidUpdate(){\n        this.fetchMutedUsers();\n    }\n\n    render() { \n        let mutedUsers;\n        if(this.state.mutedUserNames.length === 0){\n            mutedUsers = <div>NO USERS MUTED</div>\n        } else {\n            mutedUsers = this.state.mutedUserNames.map(username => <MutedUser userName={username} key={username} authToken={this.props.authToken } dispatch={this.props.dispatch} />)\n        }\n        return ( \n            <div id=\"unmute-users-container\">\n                <h1>Muted Users</h1>\n                <p>To unmute a user click their button. Their username should disapper.</p>\n                <ul id=\"muted-users-list-container\">{mutedUsers}</ul>\n            </div>\n        );\n    }\n}\n \nconst mapStateToProps = state => ({\n    authToken: state.authToken,\n    admin: state.admin,\n    refetchMutedUserList: state.refetchMutedUserList\n});\n  \nexport default connect(mapStateToProps)(UnmuteUser);\n","import React, { Component } from 'react';\nimport ReactPlayer from 'react-player'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport ReactGA from 'react-ga';\n\nimport Chat from './Chat';\nimport UnmuteUser from './UnmuteUser';\nimport './Stream.css';\n\n\nclass Stream extends Component {\n  constructor(){\n    super();\n    this.state = {\n      playBackError: false\n    }\n    this.onPlayError = this.onPlayError.bind(this);\n    this.getResources = this.getResources.bind(this);\n  }\n\n  getResources(){\n    fetch('https://api.bestclosershow.com/resources', {\n        \n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': this.props.authToken\n        }\n          \n      }).then(res => {\n        if(res.status !== 200){\n          console.log(\"getResources fetch failed\")\n        }\n        return res.json();\n      })\n      .then(body => {\n        let archives = [];\n        body.docs.forEach(doc => {\n          if(doc.isStreamLink){\n              this.props.dispatch({\n                type: 'SETSTREAMADDRESS',\n                streamAddress: doc.URL\n              });\n          } else {\n            archives.push(doc);\n          }\n        });\n        this.props.dispatch({\n          type: 'SETARCHIVEDSHOWS',\n          archivedShows: archives\n        });\n      })\n      .catch(err => console.error('Error: ' + err));\n  }\n\n  componentDidMount(){\n    if(!this.props.streamAddress){\n      this.getResources();\n      console.log(\"getResources() ran\");\n    }\n    ReactGA.initialize('UA-149455210-2');\n    ReactGA.pageview('stream');\n  }\n\n  onPlayError(){\n    console.log(\"onPlayError fired\");\n    this.setState({playBackError: true});\n  }\n\n  render () {\n    return (\n      <div id=\"stream-chat-container\">\n        {this.props.loggedIn? null : <Redirect to='/ACCOUNT' />}\n        {this.props.currentlySubscribed? \n          null \n          : \n          this.props.freeDayTokenUsed?\n            <Redirect to='/ACCOUNT' />\n            :\n            null\n        }\n        <div id=\"stream-container\">\n          <h1 className=\"stream-label\">Best Closer Show</h1>\n          {this.state.playBackError? \n            <div id=\"playback-error-container\">\n              <h1 id=\"playback-error-comment\">Awaiting Live Show</h1>\n              <button onClick={() => this.setState({playBackError: false})} id=\"refresh-stream-button\">Refresh Stream</button>\n            </div>\n            :\n            <ReactPlayer width=\"100%\" height=\"auto\" url={this.props.streamAddress} onError={this.onPlayError} playing controls playsinline />\n          }\n        </div>\n        <div id=\"chat-container\">\n          <Chat />\n        </div>\n        {this.props.admin? \n          <div id=\"unmute-user-container\">\n            <UnmuteUser />\n          </div>\n          :\n          null\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  loggedIn: state.loggedIn,\n  authToken: state.authToken,\n  userName: state.userName,\n  streamAddress: state.streamAddress,\n  admin: state.admin,\n  currentlySubscribed: state.currentlySubscribed,\n  freeDayToken: state.freeDayToken,\n  freeDayTokenUsed: state.freeDayTokenUsed\n});\n\nexport default connect(mapStateToProps)(Stream);\n","import React from 'react';\nimport Loader from 'react-loader-spinner'\n\nimport './Loading.css';\n\nconst Loading = (props) => {\n    return ( \n        <div id=\"loading-container\">\n            <Loader\n                className=\"loader\"\n                type=\"BallTriangle\"\n                color=\"white\"\n                height={100}\n                width={100}\n            />\n            <h1>{props.message}</h1>\n        </div>\n    );\n}\n \nexport default Loading;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport ReactGA from 'react-ga';\n\nimport './SignedIn.css';\nimport Loading from '../../Loading/Loading';\n\nclass SignedIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            identity: '',\n            password: '',\n            deleteToggled: false,\n            promoCode: '',\n            loading: false, \n            loadingMessage: 'Loading'\n        }\n\n        this.logout = this.logout.bind(this);\n        this.deleteAccount = this.deleteAccount.bind(this);\n        this.updateField = this.updateField.bind(this);\n        this.subscribe = this.subscribe.bind(this);\n        this.deleteToggle = this.deleteToggle.bind(this);\n        this.applyPromo = this.applyPromo.bind(this);\n    }\n\n    componentDidMount(){\n        ReactGA.initialize('UA-149455210-2');\n        ReactGA.pageview('/logged-in');\n    }\n\n    updateField(e){\n        this.setState({[e.target.id]: e.target.value});\n    }\n\n    logout(){\n        this.props.dispatch({\n            type: 'LOGOUT'\n        });\n    }\n\n    deleteAccount(){\n        if(window.confirm(\"Are you sure you want to PERMANENTLY DELETE YOUR ACCOUNT?\")){\n            this.setState({loading: true, loadingMessage: \"Awaiting Account Deletion Confirmation\"});\n            fetch('https://api.bestclosershow.com/user', {\n                method: 'delete',\n                \n                body: JSON.stringify({\n                    identity: this.state.identity,\n                    password: this.state.password\n                }),\n                \n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': this.props.authToken\n                }\n                \n            }).then(res => {\n                this.setState({loading: false});\n                if(res.status !== 200){\n                    window.alert(\"Something went wrong! Try again.\");\n                } \n                return res.json();\n            })\n            .then(body => {\n                console.log(body);\n                this.logout();\n            })\n            .catch(err => {\n                this.setState({loading: false});\n                console.error('Error: ' + err);\n            });\n        }\n        \n    }\n\n    subscribe(){\n        this.setState({loading: true, loadingMessage: \"Setting Up a PayPal Subscription Transaction\"});\n        fetch('https://api.bestclosershow.com/paypal/subscribe', {\n            method: 'post',\n            \n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.props.authToken\n            }\n            \n        }).then(res => {\n            this.setState({loading: false})\n            if(res.status !== 200){\n                window.alert(\"Error subscribing. Please try again!\");\n            } \n            return res.json();\n        })\n        .then(body => {\n            window.location.href = body.approvalLink;\n        })\n        .catch(err => {\n            this.setState({loading: false});\n            console.error('Error: ' + err);\n        });\n    }\n\n    deleteToggle(e){\n        e.preventDefault();\n        this.setState(state => ({deleteToggled: !state.deleteToggled}));\n    }\n\n    applyPromo(){\n        this.setState({loading: true, loadingMessage: \"Awaiting Confirmation of Free Trial\"})\n        fetch('https://api.bestclosershow.com/user/apply-promo', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.props.authToken\n            },\n            body: JSON.stringify({\n                promoCode: this.state.promoCode\n            })\n        }).then(res => {\n            this.setState({loading: false});\n            if(res.status !== 200){\n                if(res.status === 500){\n                    window.alert('Internal Server Error')\n                } else {\n                    window.alert(\"Invalid Promo Code\");\n                }\n            } else if(res.status === 200){\n                window.alert(\"You have full access for 24 hours. Please logout and log back in to gain access.\")\n            }\n        })\n        .catch(err => {\n            this.setState({loading: false});\n            console.error('Error: ' + err);\n        });\n    }\n\n    render() {\n        const { props } = this;\n\n        return ( \n            <React.Fragment>\n                {this.state.loading? <Loading message={this.state.loadingMessage} /> : null}\n                <div id=\"signed-in-container\">\n                    <h1>Hello {props.userName}!</h1>\n                    <h2>Manage your account from this page.</h2>\n                    <button onClick={this.logout} className=\"signed-in-button logout\" >Logout</button>\n                    {this.props.currentlySubscribed? null : <button onClick={this.subscribe} className=\"signed-in-button\" >Subscribe</button>}\n                    {this.props.freeDayToken.length > 5? \n                        null\n                        :\n                        <React.Fragment>\n                            <input onChange={this.updateField} id=\"promoCode\" className=\"promo-input\" type=\"text\" placeholder=\"Promo Code\" value={this.state.promoCode.trim()} />\n                            <button onClick={this.applyPromo} className=\"signed-in-button\" >Apply Promo</button>\n                        </React.Fragment>\n                    }\n                    {this.props.admin? \n                        <Link to='/admin'>\n                            <button  className=\"signed-in-button\" >Admin Page</button>\n                        </Link>\n                        :\n                        null\n                    }\n                    {this.state.deleteToggled?\n                        <React.Fragment>\n                            <input className=\"delete-confirmation-input\" id=\"identity\" type=\"text\" placeholder=\"Username or Email\" value={this.state.identity} onChange={this.updateField} />\n                            <input className=\"delete-confirmation-input\" id=\"password\" type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.updateField} />\n                            <button onClick={this.deleteAccount} className=\"signed-in-button delete-account\" >Delete Account</button>\n                            <div id=\"delete-toggle\" style={{marginTop: '30px'}} onClick={this.deleteToggle} >Click here to hide delete field.</div>\n                        </React.Fragment>\n                        :\n                        <div id=\"delete-toggle\" onClick={this.deleteToggle} >Want to delete your account? Click here.</div>\n                    }\n                    <Link to=\"/GIFT-SELECT\" id=\"gift-link\">\n                        CloserGifting\n                    </Link>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    authToken: state.authToken,\n    userName: state.userName,\n    currentlySubscribed: state.currentlySubscribed,\n    freeDayToken: state.freeDayToken,\n    freeDayTokenUsed: state.freeDayTokenUsed,\n    admin: state.admin\n});\n \nexport default connect(mapStateToProps)(SignedIn);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactGA from 'react-ga';\r\n\r\n\r\nimport './SignupRevised.css';\r\nimport SignedIn from './SignedIn';\r\nimport Loading from '../../Loading/Loading';\r\n\r\nclass SignupRevised extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            signupEmail: '',\r\n            signupUsername: '',\r\n            signupPassword: '',\r\n            signupPasswordConfirm: '',\r\n            signupFirstName: '',\r\n            signupLastName: '',\r\n            signupPromoCode: '',\r\n            signinUser: '',\r\n            signinPassword: '',\r\n            signupSelected: false,\r\n            loading: false,\r\n            loadingMessage: \"Loading\"\r\n        }\r\n\r\n        this.updateField = this.updateField.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.signup = this.signup.bind(this);\r\n        this.toggleSelected = this.toggleSelected.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        ReactGA.initialize('UA-149455210-2');\r\n        if(this.props.loggedIn){\r\n            ReactGA.pageview('/logged-in');\r\n        } else {\r\n            ReactGA.pageview('/login');\r\n        }\r\n    }\r\n\r\n    toggleSelected(e){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if(e.target.id === 'signup'){\r\n            this.setState({signupSelected: true});\r\n        } else if(e.target.id === 'login'){\r\n            this.setState({signupSelected: false});\r\n        }\r\n    }\r\n\r\n    updateField(e){\r\n        this.setState({[e.target.id]: e.target.value});\r\n    }\r\n\r\n    login(e){\r\n        if(e){\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n        const {signinUser, signinPassword} = this.state;\r\n        if(signinPassword === '' || signinUser === ''){\r\n            window.alert(\"Password or Email is blank!\");\r\n        } else {\r\n            this.setState({loading: true, loadingMessage: \"Logging In\"})\r\n            fetch('https://api.bestclosershow.com/user/login', {\r\n                method: 'post',\r\n                \r\n                body: JSON.stringify({\r\n                    identity: signinUser,\r\n                    password: signinPassword\r\n                }),\r\n              \r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                }\r\n              \r\n            }).then(res => {\r\n                this.setState({loading: false});\r\n                if(res.status !== 200){\r\n                    window.alert(\"Invalid Credentials\");\r\n                } \r\n                return res.json();\r\n            })\r\n            .then(body => {\r\n                console.log(body);\r\n                if(body.hasPaypalRecurringId && !body.paidSubscription){\r\n                    window.alert('IF YOU DID NOT SUBSCRIBE YET DISREGARD THIS MESSAGE. Otherwise, we are currently awaiting payment confirmation from PayPal to verify your subscription and grant you access to the show. If this message continues for more than 24 hours please cancel the subscription via your PayPal account and re-subscribe.');\r\n                }\r\n                if(body.message === \"Auth successful\") {\r\n                    this.props.dispatch({\r\n                        type: 'LOGIN',\r\n                        authToken: body.token,\r\n                        userName: signinUser,\r\n                        admin: body.admin,\r\n                        currentlySubscribed: body.paidSubscription,\r\n                        freeDayToken: body.freeDayToken,\r\n                        freeDayTokenUsed: body.freeDayTokenUsed\r\n                    });\r\n                    if(!body.paidSubscription && typeof(body.freeDayToken) !== \"string\"){\r\n                        window.alert(\"According to our records your subscription is not paid. If you have just subscribed and are still getting this message check your email because paypal may require you to confirm the transaction.\");\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.setState({loading: false});\r\n                console.error('Error: ' + err);\r\n            });\r\n        }\r\n    }\r\n\r\n    signup(e){\r\n        e.preventDefault();\r\n        const {signupEmail, signupUsername, signupPassword, signupPasswordConfirm, signupFirstName, signupLastName, signupPromoCode } = this.state;\r\n        if(signupEmail === '' || signupUsername === '' || signupPassword === '' || signupPasswordConfirm === ''){\r\n            window.alert(\"All fields must be filled\");\r\n        } else if(signupPassword !== signupPasswordConfirm){\r\n            window.alert(\"Passwords do not match!\")\r\n        } else {\r\n            this.setState({loading: true, loadingMessage: \"Awaiting Account Creation Confirmation\"});\r\n            fetch('https://api.bestclosershow.com/user/signup', {\r\n                method: 'post',\r\n                \r\n                body: JSON.stringify({\r\n                    email: signupEmail.replace(/\\s/g,''),\r\n                    userName: signupUsername.replace(/\\s/g,''),\r\n                    password: signupPassword,\r\n                    firstName: signupFirstName,\r\n                    lastName: signupLastName,\r\n                    promoCode: signupPromoCode\r\n                }),\r\n              \r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                }\r\n              \r\n            }).then(res => {\r\n                this.setState({loading: false});\r\n                if(res.status !== 200){\r\n                    window.alert(\"Username or email already in use\");\r\n                } \r\n                return res.json();\r\n            })\r\n            .then(body => {\r\n                console.log(body);\r\n                this.setState({\r\n                    signinUser: signupEmail,\r\n                    signinPassword: signupPassword\r\n                });\r\n                this.login();\r\n            })\r\n            .catch(err => {\r\n                this.setState({loading: false});\r\n                console.error('Error: ' + err);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() { \r\n        let page;\r\n        if(this.props.loggedIn === true){\r\n            page = <SignedIn userName={this.props.userName} />\r\n        } else {\r\n            page = \r\n            <React.Fragment>\r\n                <div id=\"signup-signin-container\">\r\n                    <div id=\"selections-bar\">\r\n                        <h1 onClick={this.toggleSelected} id=\"login\" style={{borderTopLeftRadius: '15px', borderBottomRightRadius: '5px'}} className={!this.state.signupSelected? \"sign-option selected-option\" : 'sign-option'}>LOG IN</h1>\r\n                        <h1 onClick={this.toggleSelected} id=\"signup\" style={{borderTopRightRadius: '15px', borderBottomLeftRadius: '5px'}} className={this.state.signupSelected? \"sign-option selected-option\" : 'sign-option'}>SIGNUP</h1>\r\n                    </div>\r\n                    <div id=\"selected-container\">\r\n                        {this.state.signupSelected? \r\n                            <form className=\"form\" onSubmit={this.signup}>\r\n                                <input onChange={this.updateField} id=\"signupFirstName\" className=\"signup-input\" type=\"text\" placeholder=\"First Name\" value={this.state.signupFirstName} />\r\n                                <input onChange={this.updateField} id=\"signupLastName\" className=\"signup-input\" type=\"text\" placeholder=\"Last Name\" value={this.state.signupLastName} />\r\n                                <input onChange={this.updateField} id=\"signupUsername\" className=\"signup-input\" type=\"text\" placeholder=\"Username\" value={this.state.signupUsername.replace(/\\s/g,'')} />\r\n                                <input onChange={this.updateField} id=\"signupEmail\" className=\"signup-input\" type=\"text\" placeholder=\"Email\" value={this.state.signupEmail.replace(/\\s/g,'')} />\r\n                                <input onChange={this.updateField} id=\"signupPassword\" className=\"signup-input\" type=\"password\" placeholder=\"Password\" value={this.state.signupPassword} />\r\n                                <input onChange={this.updateField} id=\"signupPasswordConfirm\" className=\"signup-input\" type=\"password\" placeholder=\"Confirm Password\" value={this.state.signupPasswordConfirm} />\r\n                                <input onChange={this.updateField} id=\"signupPromoCode\" className=\"signup-input\" type=\"text\" placeholder=\"Promo Code\" value={this.state.signupPromoCode.trim()} />\r\n                                <input className=\"submit-button\" type=\"submit\" value=\"SIGN UP\" />\r\n                            </form>\r\n                            :\r\n                            <div>\r\n                                <form className=\"form\" onSubmit={this.login}>\r\n                                    <input onChange={this.updateField} id=\"signinUser\" className=\"signup-input\" type=\"text\" placeholder=\"Username or Email\" value={this.state.signinUser} />\r\n                                    <input onChange={this.updateField} id=\"signinPassword\" className=\"signup-input\" type=\"password\" placeholder=\"Password\" value={this.state.signinPassword} />\r\n                                    <input className=\"submit-button\" type=\"submit\" value=\"LOG IN\" />\r\n                                </form>\r\n                                <Link to=\"/PASSWORD-RECOVERY\" id=\"password-recovery\">\r\n                                    Forgot your password? Click Here.\r\n                                </Link>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <Link to=\"/GIFT-SELECT\" id=\"gift-link\">\r\n                    CloserGifting\r\n                </Link>\r\n            </React.Fragment>\r\n        }\r\n        return ( \r\n            <React.Fragment>\r\n                {this.state.loading? <Loading message={this.state.loadingMessage} /> : null}\r\n                {page}\r\n            </React.Fragment>\r\n        );\r\n    } \r\n}\r\n \r\nconst mapStateToProps = state => ({\r\n    loggedIn: state.loggedIn,\r\n    authToken: state.authToken,\r\n    userName: state.userName\r\n});\r\n \r\nexport default connect(mapStateToProps)(SignupRevised);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport ReactGA from 'react-ga';\n\nimport './Archives.css';\n\nimport Loading from '../../Loading/Loading';\n\nclass Archive extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.setReduxSelectedArchive = this.setReduxSelectedArchive.bind(this);\n        this.removeArchive = this.removeArchive.bind(this);\n    }\n\n    setReduxSelectedArchive(){\n        this.props.dispatch({\n            type: \"SELECTARCHIVE\",\n            selectedArchive: this.props.archive\n        });\n    }\n\n    removeArchive(e){\n        e.preventDefault();\n        const { archive, authToken } = this.props;\n        fetch(`https://api.bestclosershow.com/resources/${archive._id}`, {\n            method: 'delete',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': authToken\n            }\n        }).then(res => {\n            if(res.status !== 200){\n                window.alert(\"Resource not deleted\");\n            } else if (res.status === 200) {\n                window.alert(\"Resource deleted\");\n                this.props.dispatch({\n                    type: \"CLEARARCHIVES\"\n                });\n            }\n        })\n        .catch(err => console.error('Error: ' + err));\n    }\n\n\n    render() {\n        let dateArr = this.props.archive.date.split('-');\n        let dateObj = new Date(parseInt(dateArr[0]), parseInt(dateArr[1]) - 1, parseInt(dateArr[2]));\n        let date = dateObj.toDateString();\n        return ( \n            <Link to=\"/WATCH-ARCHIVE\" onClick={this.setReduxSelectedArchive} >\n                <div className=\"archive-container\">\n                    <img className=\"archive-thumbnail\" src={`https://api.bestclosershow.com/resources/image/${this.props.archive.fileNames.thumbnail}?Authorization=${this.props.authToken}`} alt=\"thumbnail\"/>\n                    <h1 className=\"archive-title\">{this.props.title} #{this.props.archive.showNumber}</h1>\n                    <p className=\"archive-date\">{date}</p>\n                    {this.props.description.length > 1?\n                        <p className=\"archive-description\">{this.props.description}</p>\n                        :\n                        null\n                    }\n                    {this.props.admin? <h1 className=\"delete-archive-button\" onClick={this.removeArchive} >DELETE</h1> : null }\n                </div>\n            </Link>\n        );\n    }\n}\n \nclass Archives extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            loading: false\n        }\n\n        this.getResources = this.getResources.bind(this);\n    }\n\n    getResources(){\n        this.setState({loading: true});\n        fetch('https://api.bestclosershow.com/resources', {\n            \n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.props.authToken\n            }\n            \n        }).then(res => {\n            if(res.status !== 200){\n                console.log(\"getResources fetch failed\")\n            } \n            return res.json();\n        })\n        .then(body => {\n            let archives = [];\n            body.docs.forEach(doc => {\n                if(doc.isStreamLink){\n                    this.props.dispatch({\n                        type: 'SETSTREAMADDRESS',\n                        streamAddress: doc.URL\n                    });\n                } else {\n                    archives.splice(0, 0, doc);\n                }\n            });\n            this.props.dispatch({\n                type: 'SETARCHIVEDSHOWS',\n                archivedShows: archives\n            });\n            this.setState({loading: false});\n        })\n        .catch(err => {\n            this.setState({loading: false});\n            console.error('Error: ' + err);\n        });\n    }\n\n    componentDidMount(){\n        this.getResources();\n        ReactGA.initialize('UA-149455210-2');\n        ReactGA.pageview(`/viewing-archives`);\n    }\n\n    render() { \n        const sortedArchives = this.props.archivedShows.sort((a,b) => {\n            let aInt = parseInt(a.showNumber);\n            let bInt = parseInt(b.showNumber);\n            if(aInt < bInt){\n                return 1;\n            } else if(aInt > bInt){\n                return -1;\n            } else {\n                return 0;\n            }\n        });\n        const archives = sortedArchives.map(archive => <Archive archive={archive} dispatch={this.props.dispatch} title={archive.title} description={archive.description} key={archive.fileNames.video} authToken={this.props.authToken} admin={this.props.admin} /> );\n        return ( \n            <React.Fragment>\n                {this.state.loading? <Loading message=\"Retrieving Archives\" /> : null}\n                <div id=\"archives-container\">\n                    {this.props.admin? <Link to=\"/ADMIN\"><h1 id=\"add-archive-link\">ADD ARCHIVE</h1></Link> : null}\n                    {this.props.loggedIn? null : <Redirect to=\"/ACCOUNT\" />}\n                    {this.props.currentlySubscribed? \n                        null \n                        : \n                        this.props.freeDayTokenUsed === false? \n                            null\n                            :\n                            <Redirect to='/ACCOUNT' />\n                    }\n                    <h1 onClick={this.getResources} className={archives.length < 1? \"link\" : null}>THE ARCHIVES</h1>\n                    <div id=\"archive-tiles-container\">\n                        {archives}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n \nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    authToken: state.authToken,\n    userName: state.userName,\n    admin: state.admin,\n    archivedShows: state.archivedShows,\n    currentlySubscribed: state.currentlySubscribed,\n    freeDayToken: state.freeDayToken,\n    freeDayTokenUsed: state.freeDayTokenUsed\n});\n \nexport default connect(mapStateToProps)(Archives);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport ReactGA from 'react-ga';\n\nimport './WatchArchive.css';\n\nimport Chat from '../StreamPage/Chat';\n\nclass WatchArchive extends Component {\n\n    componentDidMount(){\n        ReactGA.initialize('UA-149455210-2');\n        ReactGA.pageview(`/watching-archive/date=${this.props.archive.date}`);\n    }\n\n    render() { \n        const { title, description, isStreamLink } = this.props.archive;\n        const URL = `https://api.bestclosershow.com/resources/video/${this.props.archive.fileNames.video}?Authorization=${this.props.authToken}`;\n        let rawDate = this.props.archive.date.replace(/-/g,',');\n        let dateObj = new Date(rawDate);\n        let date = dateObj.toDateString();        return ( \n            <div id=\"watch-archive-container\">\n                {this.props.loggedIn? null: <Redirect to=\"/ACCOUNT\" />}\n                {this.props.currentlySubscribed? \n                    null \n                    : \n                    this.props.freeDayTokenUsed?\n                    <Redirect to='/ACCOUNT' />\n                    :\n                    null\n                }\n                {isStreamLink? <Redirect to=\"/STREAM\" /> : null}\n                <div id=\"watch-archive-video-container\">\n                    <video id=\"archive-video\" src={URL} type=\"video/mp4\" autoPlay controls controlsList=\"nodownload\" >Update to a modern browser to view video.</video>\n                    <h1>{title} #{this.props.archive.showNumber} {date}</h1>\n                    <p id=\"watch-archive-description\">{description}</p>\n                </div>\n                <div id=\"archives-chat-wrapper\">\n                    <Chat />\n                </div>\n            </div>\n        );\n    }\n}\n \nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    authToken: state.authToken,\n    userName: state.userName,\n    admin: state.admin,\n    archive: state.selectedArchive,\n    currentlySubscribed: state.currentlySubscribed,\n    freeDayTokenUsed: state.freeDayTokenUsed\n});\n \nexport default connect(mapStateToProps)(WatchArchive);\n\n\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\n\nimport './PasswordRecover.css';\nimport Loading from '../../Loading/Loading';\n\nclass PasswordRecover extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            requestSuccessful: false,\n            recoveryEmail: '',\n            loading: false\n        }\n\n        this.updateField = this.updateField.bind(this);\n        this.requestEmailReset = this.requestEmailReset.bind(this);\n\n    }\n\n    componentDidMount(){\n        ReactGA.initialize('UA-149455210-2');\n        ReactGA.pageview('/send-password-reset');\n    }\n\n    updateField(e){\n        this.setState({[e.target.id]: e.target.value});\n    }\n\n    requestEmailReset(e){\n        e.stopPropagation();\n        e.preventDefault();\n        this.setState({loading: true});\n        fetch(`https://api.bestclosershow.com/password-reset-request/${this.state.recoveryEmail}`)\n        .then(res => {\n            this.setState({loading: false})\n            if(res.status !== 200){\n                window.alert(\"Email not found\");\n            } else if(res.status === 200){\n                this.setState({requestSuccessful: true});\n            }\n        })\n        .catch(err => {\n            this.setState({loading: false});\n            window.alert(\"An error occured!\" + err);\n        });\n    }\n\n    render() { \n        return ( \n            <React.Fragment>\n                {this.state.loading? <Loading message=\"Awaiting Confirmation of Password Reset Email Being Sent\" /> : null}\n                <div id=\"password-recover-container\">\n                    <form className=\"form\" onSubmit={this.requestEmailReset}>\n                        <h1 className=\"form-label\" >GET PASSWORD RESET EMAIL</h1>\n                        <input onChange={this.updateField} id=\"recoveryEmail\" className=\"signup-input\" type=\"text\" placeholder=\"Account Email\" value={this.state.recoveryEmail} />\n                        <input className=\"submit-button\" type=\"submit\" value=\"REQUEST EMAIL\" />\n                    </form>\n                    {this.state.requestSuccessful?\n                        <div id=\"request-success-message\">\n                            <h3>Password Recover Email Successfully Sent!</h3>\n                            <p>If you don't recieve an email within 15 minutes return to this page and try again.</p>\n                        </div>\n                        :\n                        null\n                    }\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n \nexport default PasswordRecover;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './AddArchive.css';\n\nclass AddArchive extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            title: '',\n            href: '',\n            description: 'Archive Description'\n        }\n\n        this.updateField = this.updateField.bind(this);\n        this.addArchive = this.addArchive.bind(this);\n    }\n\n    updateField(e){\n        this.setState({[e.target.id]: e.target.value});\n    }\n\n    addArchive(e){\n        e.preventDefault();\n        const { authToken } = this.props;\n        const {title, href, description} = this.state;\n        fetch(`https://api.bestclosershow.com/resources/new-resource`, {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': authToken\n            },\n            body: JSON.stringify({\n                \"title\": title,\n\t            \"URL\": href,\n\t            \"description\": description\n            })\n        }).then(res => {\n            if(res.status !== 200){\n                window.alert(\"Adding Archive Failed. Try again!\");\n            } else if (res.status === 200) {\n                window.alert(\"Archive Added\");\n                this.props.dispatch({\n                    type: \"CLEARARCHIVES\"\n                });\n            }\n        })\n        .catch(err => console.error('Error: ' + err));\n    }\n\n    render() { \n        return ( \n            <div>\n                <form id=\"add-resource-form\" className=\"form\" onSubmit={this.addArchive}>\n                    <h1 className=\"form-label\" >ADD RESOURCE</h1>\n                    <input onChange={this.updateField} id=\"title\" className=\"signup-input\" type=\"text\" placeholder=\"Archive Title\" value={this.state.title} />\n                    <input onChange={this.updateField} id=\"href\" className=\"signup-input\" type=\"text\" placeholder=\"Archive Link Address\" value={this.state.href} />\n                    <textarea onChange={this.updateField} name=\"description\" id=\"description\" form=\"add-resource-form\" value={this.state.description}></textarea>                    \n                    <input className=\"submit-button\" type=\"submit\" value=\"ADD ARCHIVE\" />\n                </form>\n            </div>\n        );\n    }\n}\n \n\nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    authToken: state.authToken,\n    userName: state.userName,\n    admin: state.admin,\n});\n \nexport default connect(mapStateToProps)(AddArchive);\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\n\nimport './PasswordReset.css';\nimport Loading from '../../Loading/Loading';\n\nclass PasswordReset extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            resetSuccess: false,\n            newPassword: '',\n            confirmNewPassword: '',\n            loading: false\n        }\n\n        this.sendPasswordResetRequest = this.sendPasswordResetRequest.bind(this);\n        this.updateField = this.updateField.bind(this);\n    }\n\n    componentDidMount(){\n        ReactGA.initialize('UA-149455210-2');\n        ReactGA.pageview('/changing-password');\n    }\n\n    updateField(e){\n        this.setState({[e.target.id]: e.target.value});\n    }\n\n    sendPasswordResetRequest(){\n        if(this.state.newPassword !== this.state.confirmNewPassword){\n            window.alert(\"Passwords do not match!\");\n        } else {\n            this.setState({loading: true});\n            fetch('https://api.bestclosershow.com/password-reset-request', {\n                method: 'post',\n                \n                body: JSON.stringify({\n                    password: this.state.newPassword,\n                    confirmPassword: this.state.confirmNewPassword, \n                    token: this.props.match.params.resetPasswordAuthToken\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(res => {\n                this.setState({loading: false});\n                if(res.status === 401){\n                    window.alert('Reset email has expired. Please request another reset email and try again!');\n                } else if(res.status === 500){\n                    window.alert('Internal server error. Please request another reset email and try again!');\n                } else if(res.status === 200){\n                    this.setState({resetSuccess: true});\n                }\n            })\n            .catch(err => {\n                this.setState({loading: false});\n                window.alert(`Error with reset request: ${err}`);\n            });\n        }\n    }\n\n    render() { \n        return (\n            <React.Fragment>\n                {this.state.loading? <Loading message=\"Awaiting Confirmation of Password Reset\" /> : null}\n                <div id=\"password-reset-container\">\n                    <h1 id=\"password-reset-label\">Reset Password for {this.props.match.params.userName}</h1>\n                    <input className=\"password-reset-input\" value={this.state.newPassword} id=\"newPassword\" onChange={this.updateField} type=\"password\" placeholder=\"NEW PASSWORD\"/>\n                    <input className=\"password-reset-input\" value={this.state.confirmNewPassword} id=\"confirmNewPassword\" onChange={this.updateField} type=\"password\" placeholder=\"CONFIRM NEW PASSWORD\"/>\n                    <button className=\"password-reset-input\" id=\"password-reset-submit-button\" onClick={this.sendPasswordResetRequest}>Change Password</button>\n                    {this.state.resetSuccess? \n                        <div id=\"password-reset-success-message\">\n                            <h3>Password Reset Successful!</h3>\n                            <p>You should now have access to your account!</p>\n                        </div>\n                        :\n                        null\n                    }\n                </div>\n            </React.Fragment> \n        );\n    }\n}\n \nexport default PasswordReset;","import React, { Component } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ReactGA from 'react-ga';\r\n\r\nimport Chat from '../StreamPage/Chat';\r\nimport Loading from '../../Loading/Loading';\r\nimport './Admin.css';\r\n\r\nclass ArchiveUpload extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n            archiveTitle: '',\r\n            archiveDescription: '',\r\n            archiveFile: '',\r\n            thumbnailFile: '',\r\n            awaitingArchiveConfirmation: false,\r\n            archiveFileDuration: '',\r\n            archiveDate: '',\r\n            archiveNumber: '',\r\n        };\r\n\r\n        this.updateField = this.updateField.bind(this);\r\n        this.addArchiveFile = this.addArchiveFile.bind(this);\r\n        this.addThumbnailFile = this.addThumbnailFile.bind(this);\r\n        this.uploadArchive = this.uploadArchive.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        ReactGA.initialize('UA-149455210-2');\r\n        ReactGA.pageview(`/admin-page`);\r\n    }\r\n\r\n    updateField(e){\r\n        this.setState({[e.target.id]: e.target.value});\r\n    }\r\n\r\n    addArchiveFile(e){\r\n        this.setState({archiveFile: e.target.files[0]});\r\n        \r\n        let document = window.document;\r\n        const dummyVideoEl = document.createElement('video');\r\n        dummyVideoEl.src = URL.createObjectURL(e.target.files[0]);\r\n        \r\n        let setDuration = setInterval(() => {\r\n            if(typeof dummyVideoEl.duration === 'number' && dummyVideoEl.duration > 1){\r\n                console.log('setting duration');\r\n                this.setState({archiveFileDuration: Math.floor(dummyVideoEl.duration)});\r\n                clearInterval(setDuration);\r\n            } else {\r\n                console.log('Value not set');\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    addThumbnailFile(e){\r\n        this.setState({thumbnailFile: e.target.files[0]});\r\n    }\r\n\r\n    uploadArchive(){\r\n        if(typeof this.state.archiveFileDuration !== 'number' || this.state.archiveFileDuration < 1 || typeof this.state.archiveFile !== 'object' || this.state.archiveTitle === '' || this.state.archiveDate.length < 1){\r\n            window.alert('Double check the archive you are trying to upload. Something is not filled out properly');\r\n        } else {\r\n            let formData = new FormData();\r\n\r\n            formData.append('video', this.state.archiveFile);\r\n            formData.append('thumbnail', this.state.thumbnailFile);\r\n            formData.append('title', this.state.archiveTitle);\r\n            formData.append('description', this.state.archiveDescription);\r\n            formData.append('date', this.state.archiveDate);\r\n            //let jsDate = new Date(date.replace('-',', '))\r\n            formData.append('duration', this.state.archiveFileDuration);\r\n            formData.append('showNumber', this.state.archiveNumber);\r\n    \r\n            this.setState({awaitingArchiveConfirmation: true});\r\n            fetch('https://api.bestclosershow.com/resources/new-resource', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': this.props.authToken\r\n                },\r\n                body: formData\r\n            })\r\n            .then(response => {\r\n                this.setState({awaitingArchiveConfirmation: false});\r\n                if(response.status === 200){\r\n                    window.alert(\"Resource Successfully Uploaded\");\r\n                } else if(response.status !== 200){\r\n                    window.alert('Error uploading resource!');\r\n                }\r\n                response.json();\r\n            })\r\n            .then(res => console.log(res))\r\n            .catch(error => {\r\n                this.setState({awaitingArchiveConfirmation: false});\r\n                console.error('Error:', error);\r\n            });\r\n        }\r\n    }\r\n    \r\n    render() { \r\n        return ( \r\n            <div className=\"admin-item\">\r\n                <h2>Add Archive</h2>\r\n                {this.state.awaitingArchiveConfirmation?\r\n                    <Loading message=\"Awaiting Archive Upload Confirmation\" />\r\n                    :\r\n                    <React.Fragment>\r\n                        <input type=\"text\" id=\"archiveTitle\" onChange={this.updateField} className=\"admin-input\" placeholder=\"Archive Title\" value={this.state.archiveTitle} />\r\n                        <input type=\"date\" id=\"archiveDate\" onChange={this.updateField} className=\"admin-input\" placeholder=\"Show Date\" value={this.state.archiveDate} />\r\n                        <input type=\"number\" id=\"archiveNumber\" onChange={this.updateField} className=\"admin-input\" placeholder=\"Show Number\" value={this.state.archiveNumber} />\r\n                        <textarea type=\"text\" id=\"archiveDescription\" onChange={this.updateField} className=\"admin-input\" placeholder=\"Archive Description\" value={this.state.archiveDescription} />\r\n                        <label htmlFor=\"Archive\" style={{fontWeight: 'bold'}}>Archive Video: </label>\r\n                        <input id=\"archiveFile\" type=\"file\" name=\"Archive\" onChange={this.addArchiveFile} />\r\n                        <div style={{height: '20px'}}></div>\r\n                        <label htmlFor=\"Thumbnail\" style={{fontWeight: 'bold'}}>Thumbnail Image: </label>\r\n                        <input type=\"file\" name=\"Thumbnail\" onChange={this.addThumbnailFile} />\r\n                        <button onClick={this.uploadArchive} id=\"upload-button\" className=\"admin-button\">UPLOAD</button>\r\n                    </React.Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nclass GenerateGiftLink extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            accessLink: ''\r\n        }\r\n    }\r\n\r\n\r\n    getGiftLink = () => {\r\n        this.setState({loading: true});\r\n        let months = document.getElementById('months').value;\r\n        fetch(`https://api.bestclosershow.com/gift/generate-link/${months}`, {\r\n            method: 'post',\r\n                headers: {\r\n                    'Authorization': this.props.authToken\r\n                }\r\n            }\r\n        )\r\n        .then(res => {\r\n            if(res.status !== 200){\r\n                window.alert('Something went wrong generating the link. Please try again!')\r\n            }\r\n            this.setState({loading: false});\r\n            return res.json();\r\n        })\r\n        .then(body => {\r\n            this.setState({accessLink: body.accessLink});\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.loading? \r\n                    <Loading message=\"Awaiting Gift Link Generation\" />     \r\n                    :\r\n                    <div id=\"generate-gift-link-contianer\">\r\n                        <h1>Generate Gift Link</h1>\r\n                       Months: <input type=\"number\" defaultValue=\"1\" id=\"months\" />\r\n                        <div onClick={this.getGiftLink}>GET LINK</div>\r\n                        <a href={this.state.accessLink}>{this.state.accessLink}</a>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n \r\n\r\nclass Admin extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            checkUserName: '',\r\n        }\r\n\r\n        this.updateField = this.updateField.bind(this);\r\n        \r\n    }\r\n    \r\n    updateField(e){\r\n        this.setState({[e.target.id]: e.target.value});\r\n    }\r\n    \r\n    render() { \r\n        return ( \r\n            <div id=\"admin-container\">\r\n                {this.props.admin? null : <Redirect to=\"/ACCOUNT\" />}\r\n                <h1 id=\"admin-title\">ADMIN VIEW</h1>\r\n                <div id=\"admin-items-container\">\r\n                    {/* <div className=\"admin-item\">\r\n                        <h2>Check user Info</h2>\r\n                        <input onChange={this.updateField} id=\"checkUserName\" className=\"admin-input\" type=\"text\" placeholder=\"Username or Email\" value={this.state.checkUserName} />\r\n                        <button className=\"admin-button\" >Check User Status</button>\r\n                        <div>\r\n                            <UserInfoField label=\"paidSubscription\" value=\"true\" />\r\n                        </div>\r\n                    </div> */}\r\n                    <div className=\"admin-item\">\r\n                        <h2>Stream/Chat</h2>\r\n                        <ReactPlayer width=\"100%\" height=\"auto\" url=\"https://stream.bestclosershow.com/hls/stream.m3u8\" onError={console.log(\"Playback error admin view.\")} playing controls playsinline />\r\n                        <div id=\"admin-chat\">\r\n                            <Chat />\r\n                        </div>\r\n                    </div>\r\n                    <ArchiveUpload authToken={this.props.authToken} />\r\n                    <GenerateGiftLink authToken={this.props.authToken} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nconst mapStateToProps = state => ({\r\n    loggedIn: state.loggedIn,\r\n    authToken: state.authToken,\r\n    admin: state.admin,\r\n});\r\n \r\nexport default connect(mapStateToProps)(Admin);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ReactGA from 'react-ga';\r\n\r\n\r\nimport './Confirm.css';\r\nimport Loading from '../../Loading/Loading';\r\n\r\nclass Confirm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            token: '',\r\n            confirmed: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {paymentConfirmationToken} = this.props.match.params;\r\n        this.setState({token: paymentConfirmationToken});\r\n        fetch(`https://api.bestclosershow.com/paypal/confirm-payment?Authorization=${paymentConfirmationToken}`)\r\n        .then(res => {\r\n            this.setState({confirmed: true});\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            this.setState({confirmed: true});\r\n        })\r\n        ReactGA.initialize('UA-149455210-2');\r\n        ReactGA.pageview('/awaiting-subscripiton-confirmation');\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                {this.state.confirmed? \r\n                    <Redirect to='/ACCOUNT' />\r\n                    :\r\n                    <Loading message=\"Awaiting Confirmation of Subscription\" />\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Confirm;","import React, { Component } from 'react';\n\nimport './GiftSelection.css';\n\nimport Loading from '../../../Loading/Loading';\n\n\nclass GiftOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false\n        }\n    }\n\n    select = () => {\n        this.setState({loading: true});\n        fetch(`https://api.bestclosershow.com/gift/create-transaction/${this.props.months}`)\n        .then(res => {\n            if(res.status !== 200){\n                this.setState({loading: false});\n                window.alert('Something went wrong creating the paypal transaction. Please try again!')\n            }\n            return res.json();\n        })\n        .then(body => {\n            console.log(body.approvalLink);\n            if(body.approvalLink){\n                window.location.href = body.approvalLink\n            }\n        })\n        .catch(err => {\n            console.error(err);\n            this.setState({loading: false});\n        });\n    }\n\n    render() {\n        let containerClass;\n        if(this.props.months === 12){\n            containerClass = 'gift-option year'\n        } else if(this.props.months === 6){\n            containerClass = 'gift-option half-year'\n        } else if(this.props.months === 3){\n            containerClass = 'gift-option quarter-year'\n        } else {\n            containerClass = 'gift-option'\n        }\n        \n        return ( \n            <React.Fragment>\n                {this.state.loading? <Loading message=\"Setting Up a PayPal Transaction\" /> : null}\n                <div onClick={this.select} className={containerClass}>\n                    <h2>{this.props.months} {this.props.months === 1? \"MONTH\" : \"MONTHS\"}</h2>\n                    <h1><sup>$</sup>{this.props.months * 5}</h1>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n \n\nclass GiftSelection extends Component {\n    render() { \n        return ( \n            <React.Fragment>\n                <ol>\n                    <h1 style={{margin: \"10px auto\"}}>How To Give</h1>\n                    <li>Select an option</li>     \n                    <li>Pay on PayPal</li>\n                    <li>Share the link on the page you are redirected to with the recipient ONLY</li>\n                </ol>\n                <div id=\"gift-options-container\">\n                    <GiftOption months={12} />\n                    <GiftOption months={6} />\n                    <GiftOption months={3} />\n                    <GiftOption months={1} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n \nexport default GiftSelection;","import React, { Component } from 'react';\nimport qs from 'query-string';\n\nimport './LinkPayout.css';\n\nimport Loading from '../../../Loading/Loading';\n\nclass LinkPayout extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            token: '',\n            monthCount: '',\n            paypalParams: {},\n            accessLink: '',\n            loading: false\n        }\n    }\n\n    componentDidMount(){\n        const paypalParams = qs.parse(this.props.location.search);\n        const { monthCount, token } = this.props.match.params;\n        this.setState({token, monthCount, paypalParams, loading: true});\n\n        const localGiftObj = JSON.parse(localStorage.getItem('giftAccount'));\n\n        if(localGiftObj && localGiftObj.paymentId === paypalParams.paymentId){\n            this.setState({accessLink: localGiftObj.accessLink, loading: false});\n        } else {\n            fetch(`https://api.bestclosershow.com/gift/execute-payment`, {\n                method: \"POST\",\n                headers: {\n                    'Authorization': token,\n                    'Content-Type': \"application/json\"\n                },\n                body: JSON.stringify({\n                    payerID: paypalParams.PayerID,\n                    paymentID: paypalParams.paymentId,\n                })            \n            })\n            .then(res => {\n                if(res.status !== 200){\n                    window.alert(\"Payment was not successfully completed, this is most likely an issue with PayPal. Please try again!\")\n                }\n                return res.json();\n            })\n            .then(body => {\n                console.log(body);\n                this.setState({accessLink: body.accessLink, loading: false});\n                localStorage.setItem('giftAccount', JSON.stringify({\n                    accessLink: body.accessLink,\n                    paymentId: paypalParams.paymentId\n                }));\n            })\n            .catch(err => {\n                console.error(`Error: ${err}`);\n                this.setState({loading: false});\n            });\n        }\n    }\n\n    render() { \n        return (\n            <React.Fragment>\n                {this.state.loading? <Loading message=\"Retrieving Gift Recipient's Access Link\" /> : null}\n                <div id=\"payout-container\">\n                    <h1>{this.state.monthCount} MONTH ACCESS LINK</h1>\n                    <a href={this.state.accessLink}>{this.state.accessLink}</a>\n                    <h1>Share this link with the recipient ONLY!</h1>\n                    <p> Whover has this link can claim the time you bought for the recipient.</p>\n                </div>\n            </React.Fragment>  \n        );\n    }\n}\n\nexport default LinkPayout;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport ReactGA from 'react-ga';\n\nimport './GiftSignup.css';\nimport SignedIn from '../../Signup/SignedIn';\nimport Loading from '../../../Loading/Loading';\n\nclass GiftSignup extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            signupSelected: true,\n            signupEmail: '',\n            signupUsername: '',\n            signupPassword: '',\n            signupPasswordConfirm: '',\n            signupFirstName: '',\n            signupLastName: '',\n            signupPromoCode: '',\n            signinUser: '',\n            signinPassword: '',\n            loading: false,\n            loadingMessage: \"Loading\"\n        }\n\n        this.updateField = this.updateField.bind(this);\n        this.login = this.login.bind(this);\n        this.signup = this.signup.bind(this);\n        this.toggleSelected = this.toggleSelected.bind(this);\n    }\n\n    componentDidMount(){\n        ReactGA.initialize('UA-149455210-2');\n        if(this.props.loggedIn){\n            ReactGA.pageview('/logged-in');\n        } else {\n            ReactGA.pageview('/gift-account-signup');\n        }\n    }\n\n    toggleSelected(e){\n        e.preventDefault();\n        e.stopPropagation();\n        if(e.target.id === 'signup'){\n            this.setState({signupSelected: true});\n        } else if(e.target.id === 'login'){\n            this.setState({signupSelected: false});\n        }\n    }\n\n    updateField(e){\n        this.setState({[e.target.id]: e.target.value});\n    }\n\n    login(e){\n        if(e){\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        const {signinUser, signinPassword} = this.state;\n        if(signinPassword === '' || signinUser === ''){\n            window.alert(\"Password or Email is blank!\");\n        } else {\n            this.setState({loading: true, loadingMessage: \"Logging In\"})\n            fetch('https://api.bestclosershow.com/user/login', {\n                method: 'post',\n                \n                body: JSON.stringify({\n                    identity: signinUser,\n                    password: signinPassword\n                }),\n              \n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              \n            }).then(res => {\n                this.setState({loading: false});\n                if(res.status !== 200){\n                    window.alert(\"Invalid Credentials\");\n                } \n                return res.json();\n            })\n            .then(body => {\n                console.log(body);\n                if(body.hasPaypalRecurringId && !body.paidSubscription){\n                    window.alert('IF YOU DID NOT SUBSCRIBE YET DISREGARD THIS MESSAGE. Otherwise, we are currently awaiting payment confirmation from PayPal to verify your subscription and grant you access to the show. If this message continues for more than 24 hours please cancel the subscription via your PayPal account and re-subscribe.');\n                }\n                if(body.message === \"Auth successful\") {\n                    this.props.dispatch({\n                        type: 'LOGIN',\n                        authToken: body.token,\n                        userName: signinUser,\n                        admin: body.admin,\n                        currentlySubscribed: body.paidSubscription,\n                        freeDayToken: body.freeDayToken,\n                        freeDayTokenUsed: body.freeDayTokenUsed\n                    });\n                    if(!body.paidSubscription && typeof(body.freeDayToken) !== \"string\"){\n                        window.alert(\"According to our records your subscription is not paid. If you have just subscribed and are still getting this message check your email because paypal may require you to confirm the transaction.\");\n                    }\n                }\n            })\n            .catch(err => {\n                console.error('Error: ' + err);\n                this.setState({loading: false});\n        });\n        }\n    }\n\n    signup(e){\n        e.preventDefault();\n        const {signupEmail, signupUsername, signupPassword, signupPasswordConfirm, signupFirstName, signupLastName, signupPromoCode } = this.state;\n        if(signupEmail === '' || signupUsername === '' || signupPassword === '' || signupPasswordConfirm === ''){\n            window.alert(\"All fields must be filled\");\n        } else if(signupPassword !== signupPasswordConfirm){\n            window.alert(\"Passwords do not match!\")\n        } else {\n            this.setState({loading: true, loadingMessage: \"Awaiting Account Creation Confirmation\"});\n            fetch('https://api.bestclosershow.com/user/signup', {\n                method: 'post',\n                \n                body: JSON.stringify({\n                    email: signupEmail.replace(/\\s/g,''),\n                    userName: signupUsername.replace(/\\s/g,''),\n                    password: signupPassword,\n                    firstName: signupFirstName,\n                    lastName: signupLastName,\n                    promoCode: signupPromoCode,\n                    giftToken: this.props.match.params.token\n                }),\n              \n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              \n            }).then(res => {\n                this.setState({loading: false});\n                return res.json();\n            })\n            .then(body => {\n                if(body.message && body.message.includes('Gift')){\n                    window.alert('Gift link has already been used to create an account!');\n                } else if(body.message && body.message.includes('taken')){\n                    window.alert('Username or email already in use!');\n                }\n                console.log(body);\n                this.setState({\n                    signinUser: signupEmail,\n                    signinPassword: signupPassword\n                });\n                this.login();\n            })\n            .catch(err => {\n                console.error('Error: ' + err);\n                this.setState({loading: false});\n            });\n        }\n    }\n\n\n    render() { \n        const { monthCount } = this.props.match.params;\n        let page;\n        if(this.props.loggedIn === true){\n            page = <SignedIn userName={this.props.userName} />\n        } else {\n            page = \n            <React.Fragment>\n                <h1 id=\"gift-signup-message\">Signup here to get full access for {monthCount} {monthCount > 1? 'months' : 'month' }</h1>\n                <div id=\"signup-signin-container\">\n                    <div id=\"selections-bar\">\n                        <h1 onClick={this.toggleSelected} id=\"login\" style={{borderTopLeftRadius: '15px', borderBottomRightRadius: '5px'}} className={!this.state.signupSelected? \"sign-option selected-option\" : 'sign-option'}>LOG IN</h1>\n                        <h1 onClick={this.toggleSelected} id=\"signup\" style={{borderTopRightRadius: '15px', borderBottomLeftRadius: '5px'}} className={this.state.signupSelected? \"sign-option selected-option\" : 'sign-option'}>SIGNUP</h1>\n                    </div>\n                    <div id=\"selected-container\">\n                        {this.state.signupSelected? \n                            <form className=\"form\" onSubmit={this.signup}>\n                                <input onChange={this.updateField} id=\"signupFirstName\" className=\"signup-input\" type=\"text\" placeholder=\"First Name\" value={this.state.signupFirstName} />\n                                <input onChange={this.updateField} id=\"signupLastName\" className=\"signup-input\" type=\"text\" placeholder=\"Last Name\" value={this.state.signupLastName} />\n                                <input onChange={this.updateField} id=\"signupUsername\" className=\"signup-input\" type=\"text\" placeholder=\"Username\" value={this.state.signupUsername.replace(/\\s/g,'')} />\n                                <input onChange={this.updateField} id=\"signupEmail\" className=\"signup-input\" type=\"text\" placeholder=\"Email\" value={this.state.signupEmail.replace(/\\s/g,'')} />\n                                <input onChange={this.updateField} id=\"signupPassword\" className=\"signup-input\" type=\"password\" placeholder=\"Password\" value={this.state.signupPassword} />\n                                <input onChange={this.updateField} id=\"signupPasswordConfirm\" className=\"signup-input\" type=\"password\" placeholder=\"Confirm Password\" value={this.state.signupPasswordConfirm} />\n                                <input className=\"submit-button\" type=\"submit\" value=\"SIGN UP\" />\n                            </form>\n                            :\n                            <div>\n                                <form className=\"form\" onSubmit={this.login}>\n                                    <input onChange={this.updateField} id=\"signinUser\" className=\"signup-input\" type=\"text\" placeholder=\"Username or Email\" value={this.state.signinUser} />\n                                    <input onChange={this.updateField} id=\"signinPassword\" className=\"signup-input\" type=\"password\" placeholder=\"Password\" value={this.state.signinPassword} />\n                                    <input className=\"submit-button\" type=\"submit\" value=\"LOG IN\" />\n                                </form>\n                                <Link to=\"/PASSWORD-RECOVERY\" id=\"password-recovery\">\n                                    Forgot your password? Click Here.\n                                </Link>\n                            </div>\n                        }\n                    </div>\n                </div>\n                <Link to=\"/GIFT-SELECT\" id=\"gift-link\">\n                    CloserGifting\n                </Link>\n            </React.Fragment>\n        }\n        return ( \n            <React.Fragment>\n                {this.state.loading? <Loading message={this.state.loadingMessage} /> : null}\n                {page}\n            </React.Fragment>\n        );\n    } \n}\n \nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    authToken: state.authToken,\n    userName: state.userName\n});\n \nexport default connect(mapStateToProps)(GiftSignup);","import React, { Component } from 'react';\nimport {BrowserRouter as Router,Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './Redux/store';\n\n\nimport Header from './Navigation/Header/Header';\nimport Footer from './Navigation/Footer/Footer';\n\nimport Stream from './Routes/StreamPage/Stream';\nimport SignupRevised from './Routes/Signup/SignupRevised';\nimport Archives from './Routes/Archives/Archives';\nimport WatchArchive from './Routes/Archives/WatchArchive';\nimport PasswordRecover from './Routes/Signup/PasswordRecover';\nimport AddArchive from './Routes/Archives/AddArchive';\nimport PasswordReset from './Routes/PasswordReset/PasswordReset';\nimport AdminView from './Routes/AdminView/Admin';\nimport Confirm from './Routes/ConfirmSubscription/Confirm';\nimport GiftSelection from './Routes/GiftRoutes/GiftSelect/GiftSelection';\nimport LinkPayout from './Routes/GiftRoutes/LinkPage/LinkPayout';\nimport GiftSignup from './Routes/GiftRoutes/GiftSignup/GiftSignup';\n\nimport AdminRevised from './Routes/AdminView/AdminRevised';\n\n \nclass App extends Component {\n  render () {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Header />\n          <Route path=\"/(|ACCOUNT)/\" component={SignupRevised} />\n          <Route path=\"/STREAM\" component={Stream} />\n          <Route path=\"/ARCHIVES\" component={Archives} />\n          <Route path=\"/WATCH-ARCHIVE\" component={WatchArchive} />\n          <Route path=\"/PASSWORD-RECOVERY\" component={PasswordRecover} />\n          <Route path=\"/ADD-ARCHIVE\" component={AddArchive} />\n          <Route path=\"/ADMIN\" component={AdminView} />\n          <Route path=\"/RESET-PASSWORD/:resetPasswordAuthToken/:userName\" component={PasswordReset} />\n          <Route path=\"/CONFIRM-PAYPAL-SUBSCRIPTION/:paymentConfirmationToken\" component={Confirm} />\n          <Route path=\"/GIFT-SELECT\" component={GiftSelection} />\n          <Route path=\"/GIFT-LINK-PAYOUT/:monthCount/:token\" component={LinkPayout} />\n          <Route path=\"/GIFT-ACCOUNT-SIGNUP/:monthCount/:token\" component={GiftSignup} />\n          <Footer />\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}